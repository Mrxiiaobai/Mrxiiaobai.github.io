{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[],"Cache":[{"_id":"source/_posts/linux-send-serve.md","hash":"a13710de5df90dd1aa832ee53e1cb0766b9a2547","modified":1675323421124},{"_id":"source/_posts/linux-ln.md","hash":"b0f4de327bf19acbafac003a06a8ec8cce772fd7","modified":1675323415722},{"_id":"source/_posts/python-apk.md","hash":"159b543a5c6df5c5bff72eaa3cdd06957a7038bc","modified":1675323426355},{"_id":"source/_posts/linux-task.md","hash":"492fb89302a29072d6ee4654fced2c3a7cef979f","modified":1675323423624},{"_id":"source/_posts/react-decoration.md","hash":"c50f19b0db958b849fc87be5d968d54267be4c55","modified":1675323437195},{"_id":"source/_posts/vscode-plugin.md","hash":"bf8b3a79e653f6647f8d0fcdd4eb31d5fb2b1caf","modified":1675320995099},{"_id":"source/_posts/react-dnd.md","hash":"fc02dc6f20d5674fb2cb643e53990517ea1d7e94","modified":1675323440021},{"_id":"source/_posts/react-cors.md","hash":"4547e8ded0b0ab2275674283066957d0775090ab","modified":1675323429925},{"_id":"source/_posts/vscode-autosave.md","hash":"8a3e59a8ae51141ad35d701d86134ab62d1e3968","modified":1675323443198},{"_id":"source/_posts/vue-vmodel.md","hash":"e446a22230a9710045445361d7384d0cb75181d0","modified":1675323450060},{"_id":"source/_posts/websocket-single.md","hash":"71a00b93cc38881805e2eacff44612803944b21b","modified":1675323460484},{"_id":"source/_posts/websocket-chatroom.md","hash":"87c6a9766bae7f321445b8a53eff115d36aa5f70","modified":1675323456000},{"_id":"themes/kaze/README.md","hash":"8e910879f3216ff2a78e423ca2e3f9519bdd1c91","modified":1675324606301},{"_id":"themes/kaze/LICENSE","hash":"f02809429223af6943d9ce48bcf9573c8bcd8d74","modified":1675324606299},{"_id":"themes/kaze/.eslintrc.json","hash":"aed952f6134bd0e99472a46abe8a0770d50c7f0e","modified":1675324606291},{"_id":"themes/kaze/README_zh.md","hash":"af0b98a3a8245b487df98d808c9b616f88d4776f","modified":1675324606303},{"_id":"themes/kaze/package.json","hash":"b694d32a59b9d79283460a89e01aa88c8f5b7cb1","modified":1675324606356},{"_id":"themes/kaze/gulpfile.js","hash":"625872400c48d03fc0615c34f69747f8aacc61b2","modified":1675324606306},{"_id":"themes/kaze/index.js","hash":"37e564126e64000f0ed7b5af7f78b5992326667a","modified":1675324606308},{"_id":"themes/kaze/languages/zh-CN.yml","hash":"bbaa7db92bf43dd16e3299266bff91ef7ebcfb6d","modified":1675324606311},{"_id":"themes/kaze/languages/en.yml","hash":"35c63f2535a519654d67d640a4dbe5737fe0c6ed","modified":1675324606310},{"_id":"themes/kaze/layout/about.ejs","hash":"31db8400937759fb20a7fdc4f990f9f78405095f","modified":1675324606336},{"_id":"themes/kaze/layout/archive.ejs","hash":"a7aff15e7f2d5815db8b71f2b82e76ec591a3e79","modified":1675324606337},{"_id":"themes/kaze/layout/category.ejs","hash":"fe5333d39124a72d0b4db2f1aff6a79345e21d12","modified":1675324606339},{"_id":"themes/kaze/layout/categories.ejs","hash":"5e6f54926101c3300d9be7eb2ba43eff9f39f14d","modified":1675324606338},{"_id":"themes/kaze/layout/index.ejs","hash":"4855e171ba9066f060e729271b3b27415a75e39b","modified":1675324606340},{"_id":"themes/kaze/layout/layout.ejs","hash":"85f97189c0a8dafb6291a0f771d85f44becff165","modified":1675324606342},{"_id":"themes/kaze/_config.yml","hash":"97615ac139168b8ffdebf7e91091e79ff04b5d7e","modified":1675324869877},{"_id":"themes/kaze/layout/links.ejs","hash":"ab593eef53294e0b4323a41bc88b71c7ae90f74e","modified":1675324606343},{"_id":"themes/kaze/layout/post.ejs","hash":"181354f5a1c395b7287cd5b0c2998f10a6461d26","modified":1675324606344},{"_id":"themes/kaze/layout/tags.ejs","hash":"fda73c9a2b0f96acc7af8d251d2f44de034340d7","modified":1675324606347},{"_id":"themes/kaze/scripts/index.js","hash":"38f5bceb479238c1b23da77e3d612cf8d3af0987","modified":1675324606364},{"_id":"themes/kaze/layout/tag.ejs","hash":"c409545e32ebf7f38ca65c39bf8e220176c17e23","modified":1675324606346},{"_id":"themes/kaze/lib/lazyload.js","hash":"4d261bc1285fde791d77f3ed1b4369a0cd27c9a5","modified":1675324606349},{"_id":"themes/kaze/lib/mergeConfig.js","hash":"a14df30e68accd8c074bf8e2e1d35b610152cc55","modified":1675324606350},{"_id":"themes/kaze/.github/workflows/release.yml","hash":"ac436597c6831e9d346aeb9e5cf54b7ec6476aba","modified":1675324606297},{"_id":"themes/kaze/layout/_partial/author.ejs","hash":"f199de30fa5333bfb16aa9a635a6179446512b76","modified":1675324606314},{"_id":"themes/kaze/layout/_partial/archives.ejs","hash":"4822c0ca716866292339e093b6dbcc266b48a8eb","modified":1675324606313},{"_id":"themes/kaze/layout/_partial/footer.ejs","hash":"f7fddf0eb249cc4329214a81444a458480bd79a5","modified":1675324606318},{"_id":"themes/kaze/layout/_partial/categories.ejs","hash":"2764f8c9dc67bfaff126223cd58c07da6cb2ddf3","modified":1675324606317},{"_id":"themes/kaze/layout/_partial/head.ejs","hash":"5988622b8dac9027ebd9d4b50903da80d311a9e4","modified":1675324606319},{"_id":"themes/kaze/layout/_partial/left-aside.ejs","hash":"d775e8de828c6fc7fa7dfe3af07e0a6dd17f10b8","modified":1675324606320},{"_id":"themes/kaze/layout/_partial/nav.ejs","hash":"07e13a659dae1e357bede2bbbf5d223013aee4c3","modified":1675324606321},{"_id":"themes/kaze/layout/_partial/recent-post.ejs","hash":"f55b4a2ab7c85ec8e8883b9f462828fd4f9b6088","modified":1675324606330},{"_id":"themes/kaze/layout/_partial/pagination.ejs","hash":"7fb58bb1acad33a94359503ffcf63cd2e11e014b","modified":1675324606322},{"_id":"themes/kaze/layout/_partial/scrollbutton.ejs","hash":"33f8590ab3d9e48ec212fee97240534f53542fee","modified":1675324606333},{"_id":"themes/kaze/layout/_partial/right-aside.ejs","hash":"274699037cc6a5891fc7c848d24396158d553dda","modified":1675324606331},{"_id":"themes/kaze/layout/_partial/tags.ejs","hash":"15300108efb9df04f3c72478d5d382bdc36e3768","modified":1675324606334},{"_id":"themes/kaze/layout/_partial/toc-card.ejs","hash":"b4fe4cbd158773da4d56092487794ef151271e47","modified":1675324606335},{"_id":"themes/kaze/lib/minify/minifyHTML.js","hash":"9fea2e1cf2b3b0a66091ae2d7c029b8b64659329","modified":1675324606353},{"_id":"themes/kaze/scripts/generators/pagerouter.js","hash":"ff9ad130a6b55b73d66d13233d2acb078a416bb8","modified":1675324606358},{"_id":"themes/kaze/scripts/helpers/load.js","hash":"71efbb02d50b323f642a1594b326d78e117ad899","modified":1675324606361},{"_id":"themes/kaze/scripts/helpers/count.js","hash":"a2ecc582e9f4489726bb9668b51b682f8129e30e","modified":1675324606360},{"_id":"themes/kaze/scripts/highlight/replace.js","hash":"38879d7e4bafd016a0a3cd86df65233eb2d0f92e","modified":1675324606363},{"_id":"themes/kaze/lib/minify/minifyCSS.js","hash":"8e7d37437fb90e1c597ff5de4583108c69f988b2","modified":1675324606352},{"_id":"themes/kaze/scripts/tag/note.js","hash":"a04695ac1c623544a554b083b2bb112caaeb571f","modified":1675324606366},{"_id":"themes/kaze/lib/minify/minifyJS.js","hash":"77b9317ddd5a127a3c39e0fa03934056ac296be9","modified":1675324606354},{"_id":"themes/kaze/layout/_partial/plugins/fslightbox.ejs","hash":"70bb82a276d87d590d91e16f4755c6ff3518ddd0","modified":1675324606328},{"_id":"themes/kaze/layout/_partial/plugins/latex.ejs","hash":"ced3205d1d6b9ddf0af3828257372b9329b9ebad","modified":1675324606329},{"_id":"themes/kaze/source/css/_base/color.styl","hash":"377909c1810dcefa0f1833725e8657f57c7bff51","modified":1675324606370},{"_id":"themes/kaze/source/css/_base/highlight.styl","hash":"470427d9d6acfa2b35205962efac1422010f744f","modified":1675324606371},{"_id":"themes/kaze/source/js/main.js","hash":"998e0449b5b9ea1253f15e4c52a6f81eb0cb1215","modified":1675324705114},{"_id":"themes/kaze/source/css/_mixins/index.styl","hash":"1a7b903c2a2efac8b00f5cc8d66efcf0815e4f0f","modified":1675324606373},{"_id":"themes/kaze/source/css/main.styl","hash":"8b602110e32636076754d9e26555f4c924dfa8bb","modified":1675324606393},{"_id":"themes/kaze/source/css/_base/index.styl","hash":"c5eb9ee07af5825d919504fd55acaf7c74f92edc","modified":1675324606371},{"_id":"themes/kaze/source/css/_base/reset.styl","hash":"2427aa4e3232514ee6bf4bce3df05bbde05efc53","modified":1675324606372},{"_id":"themes/kaze/source/css/_pages/about.styl","hash":"f62490c77089a8817474865f30c3d7681f354f49","modified":1675324606375},{"_id":"themes/kaze/source/css/_pages/archives.styl","hash":"58870ce9fc8152718a1cc33957bd83714f53b0b3","modified":1675324606375},{"_id":"themes/kaze/source/css/_pages/categories.styl","hash":"57eb55a17f413ba8a1445bb2fbdb9bf1da512396","modified":1675324606376},{"_id":"themes/kaze/source/css/_pages/index.styl","hash":"9cf3eaefe00fadd82226ed0b934008236c212564","modified":1675324606377},{"_id":"themes/kaze/source/css/_pages/rewrite.styl","hash":"a6548caf20bda1b2c7124451a6b4963f10b2055c","modified":1675324606378},{"_id":"themes/kaze/source/css/_pages/tags.styl","hash":"fd982b1929796ccea7b9e58297335998b310c894","modified":1675324606378},{"_id":"themes/kaze/source/js/lib/busuanzi.min.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1675324606394},{"_id":"themes/kaze/source/js/lib/lozad.min.js","hash":"31d6033296c6e6ebff829ab29d171bac3177280d","modified":1675324606395},{"_id":"themes/kaze/layout/_partial/plugins/comments/gitalk.ejs","hash":"9c473240d19919bf0467ef0622c5a4ef2a8349ed","modified":1675324606325},{"_id":"themes/kaze/layout/_partial/plugins/comments/livere.ejs","hash":"7c743023ba37aec87a2f341031f81e2939759cbd","modified":1675324606326},{"_id":"themes/kaze/source/css/_variables/index.styl","hash":"d219d3737a46473aaae4e0b988850ded7d018f6a","modified":1675324606392},{"_id":"themes/kaze/layout/_partial/plugins/comments/valine.ejs","hash":"11f9ec64783d78486ef4d07150a35ec9fc0e04e4","modified":1675324606327},{"_id":"themes/kaze/source/css/_pages/widgets/author.styl","hash":"10ba74099d0f21d7320485a96bde1728e0739880","modified":1675324606380},{"_id":"themes/kaze/source/css/_pages/widgets/archive.styl","hash":"dc9cf450fa62159fef6f4b907981c8b4328712b8","modified":1675324606379},{"_id":"themes/kaze/source/css/_pages/widgets/button.styl","hash":"8178177b1a14c2a59b3e1afd92001c2dae9a193f","modified":1675324606381},{"_id":"themes/kaze/source/css/_pages/widgets/categories.styl","hash":"0cc0859ea4ea027f5d32471e1f6a6c7c9844fd20","modified":1675324606382},{"_id":"themes/kaze/source/css/_pages/widgets/card.styl","hash":"45bbbb149cf47f0f4ae264948203fd23b6adf190","modified":1675324606381},{"_id":"themes/kaze/source/css/_pages/widgets/container.styl","hash":"62faf1e412d9b7d5d709ad6619df36f5991d1ef4","modified":1675324606383},{"_id":"themes/kaze/source/css/_pages/widgets/columns.styl","hash":"106d989d4a9af348ec117467df72db8707401313","modified":1675324606383},{"_id":"themes/kaze/source/css/_pages/widgets/footer.styl","hash":"73dde79e9e425660e52445ea2663004735243912","modified":1675324606384},{"_id":"themes/kaze/source/css/_pages/widgets/friends.styl","hash":"5b28b3bb06934f4e61af7297ba2d7c98cb666956","modified":1675324606384},{"_id":"themes/kaze/source/css/_pages/widgets/nav.styl","hash":"fcdf6be83ce7b3eb582f8bdbd21cb55be9707fe0","modified":1675324606385},{"_id":"themes/kaze/source/css/_pages/widgets/pagination.styl","hash":"56fd2cf88c41c2bc166f781e40e0d09768b76a7f","modified":1675324606386},{"_id":"themes/kaze/source/css/_pages/widgets/post.styl","hash":"071258bd72a83ff5ec5582ba0f652246c136bbd8","modified":1675324606386},{"_id":"themes/kaze/source/css/_pages/widgets/postlist.styl","hash":"d73c2c6527013e6efc81d5e402ac3ca02433d697","modified":1675324606388},{"_id":"themes/kaze/source/css/_pages/widgets/recentposts.styl","hash":"076c8b83c0f8dcd6ad8c23cf90c4c70d13bec597","modified":1675324606388},{"_id":"themes/kaze/source/css/_pages/widgets/section.styl","hash":"506e0f451e556b2a349b0f89df897d1a0f22a2c6","modified":1675324606389},{"_id":"themes/kaze/source/css/_pages/widgets/tags.styl","hash":"0b5f1feed9630019e77d31f098fdc6acf3e8b63c","modified":1675324606390},{"_id":"themes/kaze/source/css/_pages/widgets/toc.styl","hash":"b50682f006d19e30be963d5ae0ab49b233e852bd","modified":1675324606391},{"_id":"themes/kaze/source/js/lib/prism/prism-coy.min.css","hash":"de43e5d8fe8ac0e5be493fc37280a14764d224ba","modified":1675324606396},{"_id":"themes/kaze/source/js/lib/prism/prism-dark.min.css","hash":"99ad7013f4e2cb94d6858f1d338ce24976722e16","modified":1675324606397},{"_id":"themes/kaze/source/js/lib/prism/prism-funky.min.css","hash":"1b4f667352bde11377b82f6402af9470ca7d410d","modified":1675324606398},{"_id":"themes/kaze/source/js/lib/prism/prism-solarizedlight.min.css","hash":"58ddae9f0df85468118a028e24b975848e22488c","modified":1675324606400},{"_id":"themes/kaze/source/js/lib/prism/prism-line-numbers.min.css","hash":"7831e69297d5fadf91f33f63f2aeb58f0c374e6b","modified":1675324606399},{"_id":"themes/kaze/source/js/lib/prism/prism-okaidia.min.css","hash":"a611beee4ccd9bc303667159ad2977fc4fa02126","modified":1675324606399},{"_id":"themes/kaze/source/js/lib/prism/prism-tomorrow.min.css","hash":"ff9820d63a78827b2798030c4734e9c752183953","modified":1675324606401},{"_id":"themes/kaze/source/js/lib/prism/prism.min.css","hash":"3e748cee6ef8cdaceec5335971b8d133aa9dcfa3","modified":1675324606402},{"_id":"themes/kaze/source/js/lib/prism/prism-twilight.min.css","hash":"18a27c7ef76965a40daaab90035500a3ad7f2cbf","modified":1675324606402},{"_id":"public/2023/02/02/react-cors/index.html","hash":"808fba48072e325cd6536ef35520e3daddd6a6bd","modified":1675325355362},{"_id":"public/2023/02/02/linux-ln/index.html","hash":"03f9a22fe3ef23fb40f5b43adf1a6e10e766a5c7","modified":1675325355362},{"_id":"public/2023/02/02/linux-send-serve/index.html","hash":"1542125fa5f4ffffd5ffc92ce3e75003cef03a3a","modified":1675325355362},{"_id":"public/archives/page/2/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/archives/2023/page/2/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/archives/2023/02/page/2/index.html","hash":"245c1f57d493170efe948bec384277eb21961a89","modified":1675325355362},{"_id":"public/categories/linux/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/categories/python/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/categories/react/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/categories/vscode/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/categories/vue/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/categories/websocket/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/page/2/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/tags/linux设置定时任务/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/tags/linux设置软链接/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/tags/python生成apk/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/tags/谷歌无跨域模式/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/tags/linux服务器之间上传文件/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/tags/react配置装饰器/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/tags/基于react-dnd实现拖拽、排序/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/tags/vscode插件/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/tags/vscode保存格式化设置/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/tags/vue组件的v-model/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/tags/websocket聊天室/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/tags/websocket群聊/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/categories/index.html","hash":"accb58abc8d54b33802bfb0c0953ba16ea154134","modified":1675325355362},{"_id":"public/tags/index.html","hash":"197b5bf1838f3f1f442d785a47696e90ca4a4d55","modified":1675325355362},{"_id":"public/2023/02/02/react-dnd/index.html","hash":"c54fbfbd993e4880c0c13a432c92b17555b85878","modified":1675325355362},{"_id":"public/2023/02/02/websocket-chatroom/index.html","hash":"0af93f80576aacc62359e5b29c79a325e6274795","modified":1675325355362},{"_id":"public/2023/02/02/websocket-single/index.html","hash":"b3dc207807d84fabe86d2e2d2162b002cf1d4b97","modified":1675325355362},{"_id":"public/2023/02/02/vue-vmodel/index.html","hash":"2b7d87c8b4e1d89efb3c9d3786d0c023c4ba5ac5","modified":1675325355362},{"_id":"public/2023/02/02/vscode-autosave/index.html","hash":"c274b116d10266876548a68154bb265080c41b88","modified":1675325355362},{"_id":"public/2023/02/02/vscode-plugin/index.html","hash":"ea557f5fa245dfad002c1bc06543ab647a37c80d","modified":1675325355362},{"_id":"public/2023/02/02/react-decoration/index.html","hash":"841c3e9ce27ba18a58c5b80dabe10abd73e41a81","modified":1675325355362},{"_id":"public/2023/02/02/python-apk/index.html","hash":"f4245fe210bd740bc11939bb889fb4e2d8fa24e6","modified":1675325355362},{"_id":"public/2023/02/01/linux-task/index.html","hash":"446315b7ba25d49a4531732972054af0a43b0874","modified":1675325355362},{"_id":"public/archives/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/archives/2023/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/archives/2023/02/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/links/index.html","hash":"06368ac16043eba2ac6aa9dc8fa124aadef362f8","modified":1675325355362},{"_id":"public/js/lib/busuanzi.min.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1675325355362},{"_id":"public/js/main.js","hash":"998e0449b5b9ea1253f15e4c52a6f81eb0cb1215","modified":1675325355362},{"_id":"public/js/lib/lozad.min.js","hash":"31d6033296c6e6ebff829ab29d171bac3177280d","modified":1675325355362},{"_id":"public/js/lib/prism/prism-coy.min.css","hash":"de43e5d8fe8ac0e5be493fc37280a14764d224ba","modified":1675325355362},{"_id":"public/js/lib/prism/prism-dark.min.css","hash":"99ad7013f4e2cb94d6858f1d338ce24976722e16","modified":1675325355362},{"_id":"public/js/lib/prism/prism-funky.min.css","hash":"1b4f667352bde11377b82f6402af9470ca7d410d","modified":1675325355362},{"_id":"public/js/lib/prism/prism-line-numbers.min.css","hash":"7831e69297d5fadf91f33f63f2aeb58f0c374e6b","modified":1675325355362},{"_id":"public/js/lib/prism/prism-okaidia.min.css","hash":"a611beee4ccd9bc303667159ad2977fc4fa02126","modified":1675325355362},{"_id":"public/js/lib/prism/prism-solarizedlight.min.css","hash":"58ddae9f0df85468118a028e24b975848e22488c","modified":1675325355362},{"_id":"public/js/lib/prism/prism-tomorrow.min.css","hash":"ff9820d63a78827b2798030c4734e9c752183953","modified":1675325355362},{"_id":"public/js/lib/prism/prism-twilight.min.css","hash":"18a27c7ef76965a40daaab90035500a3ad7f2cbf","modified":1675325355362},{"_id":"public/js/lib/prism/prism.min.css","hash":"3e748cee6ef8cdaceec5335971b8d133aa9dcfa3","modified":1675325355362},{"_id":"public/css/main.css","hash":"0839ff7311a852081270c3730c33c2662fd37984","modified":1675325355362},{"_id":"source/_posts/linux/linux-send-serve.md","hash":"a13710de5df90dd1aa832ee53e1cb0766b9a2547","modified":1702024445045},{"_id":"source/_posts/linux/linux-task.md","hash":"492fb89302a29072d6ee4654fced2c3a7cef979f","modified":1702024448698},{"_id":"source/_posts/linux/linux-ln.md","hash":"b0f4de327bf19acbafac003a06a8ec8cce772fd7","modified":1702024442930},{"_id":"source/_posts/react/react-dnd.md","hash":"fc02dc6f20d5674fb2cb643e53990517ea1d7e94","modified":1675323440021},{"_id":"source/_posts/react/react-cors.md","hash":"4547e8ded0b0ab2275674283066957d0775090ab","modified":1675323429925},{"_id":"source/_posts/react/react-decoration.md","hash":"c50f19b0db958b849fc87be5d968d54267be4c55","modified":1675323437195},{"_id":"source/_posts/python/python-apk.md","hash":"159b543a5c6df5c5bff72eaa3cdd06957a7038bc","modified":1675323426355},{"_id":"source/_posts/vscode/vscode-plugin.md","hash":"bf8b3a79e653f6647f8d0fcdd4eb31d5fb2b1caf","modified":1675320995099},{"_id":"source/_posts/vscode/vscode-autosave.md","hash":"8a3e59a8ae51141ad35d701d86134ab62d1e3968","modified":1675323443198},{"_id":"source/_posts/websocket/websocket-chatroom.md","hash":"87c6a9766bae7f321445b8a53eff115d36aa5f70","modified":1675323456000},{"_id":"source/_posts/websocket/websocket-single.md","hash":"71a00b93cc38881805e2eacff44612803944b21b","modified":1675323460484},{"_id":"source/_posts/vue/vue-vmodel.md","hash":"e446a22230a9710045445361d7384d0cb75181d0","modified":1675323450060},{"_id":"source/a.md","hash":"bc2dcf9a5df136ea59ff501e10dac2e5241225bd","modified":1702027445410},{"_id":"public/2023/12/08/linux/linux-task/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/2023/12/08/linux/linux-send-serve/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/2023/12/08/linux/linux-ln/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/2023/02/02/react/react-dnd/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/2023/02/02/websocket/websocket-single/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/2023/02/02/vue/vue-vmodel/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/2023/02/02/vscode/vscode-plugin/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/2023/02/02/vscode/vscode-autosave/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/2023/02/02/react/react-decoration/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/2023/02/02/react/react-cors/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/2023/02/02/python/python-apk/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/archives/2023/12/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020},{"_id":"public/2023/02/02/websocket/websocket-chatroom/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702027679020}],"Category":[{"name":"linux","_id":"cldmtglmq0002l1zi34um92r3"},{"name":"python","_id":"cldmtglmz000cl1zi249545g9"},{"name":"react","_id":"cldmtgln1000kl1zi48ykgo6y"},{"name":"vscode","_id":"cldmtgln5000xl1zi85bd4ttd"},{"name":"vue","_id":"cldmtgln60015l1zib5ho2gzd"},{"name":"websocket","_id":"cldmtgln7001al1zi22kigsf0"}],"Data":[],"Page":[],"Post":[{"title":"linux设置软链接","_content":"\n找到MySQL的安装路径： \n```\nwhich mysql\n```\n假设找到的是:\n```\n/home/user1/mysql/bin/mysql\n```\n建立软连接  \n```\ncd /usr/bin && ln -fs /home/user1/mysql/bin/mysql mysql\n```\n","source":"_posts/linux/linux-ln.md","raw":"---\ncategories: linux\ntags: linux设置软链接\ntitle: linux设置软链接\n---\n\n找到MySQL的安装路径： \n```\nwhich mysql\n```\n假设找到的是:\n```\n/home/user1/mysql/bin/mysql\n```\n建立软连接  \n```\ncd /usr/bin && ln -fs /home/user1/mysql/bin/mysql mysql\n```\n","slug":"linux/linux-ln","published":1,"date":"2023-12-08T08:34:02.929Z","updated":"2023-12-08T08:34:02.930Z","_id":"clpwdepj80000hazian41334d","comments":1,"layout":"post","photos":[],"link":"","content":"<p>找到MySQL的安装路径： </p>\n<pre class=\"highlight\"><span class=\"line\">which mysql</span><br></pre>\n<p>假设找到的是:</p>\n<pre class=\"highlight\"><span class=\"line\">/home/user1/mysql/bin/mysql</span><br></pre>\n<p>建立软连接  </p>\n<pre class=\"highlight\"><span class=\"line\">cd /usr/bin &amp;&amp; ln -fs /home/user1/mysql/bin/mysql mysql</span><br></pre>\n","site":{"data":{}},"excerpt":"","more":"<p>找到MySQL的安装路径： </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">which mysql</span><br></pre></td></tr></table></figure>\n<p>假设找到的是:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/home/user1/mysql/bin/mysql</span><br></pre></td></tr></table></figure>\n<p>建立软连接  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/bin &amp;&amp; ln -fs /home/user1/mysql/bin/mysql mysql</span><br></pre></td></tr></table></figure>\n"},{"title":"linux服务器之间上传文件","_content":"\n```\nscp [参数] <源地址（用户名@IP地址或主机名）>:<文件路径> <目的地址（用户名 @IP 地址或主机名）>:<文件路径>\n```\n\n\n1、文件从本地上传到服务器 \n```\nscp /home/work/source.txt 192.168.0.10:/home/work/ #把本地的source.txt文件拷贝到192.168.0.10机器上的/home/work目录下\n```\n\n2、文件从服务器下载到本地\n\n```\nscp work@192.168.0.10:/home/work/source.txt /home/work/  #把192.168.0.10机器上的source.txt文件拷贝到本地的/home/work目录下\n```\n\n3、文件从服务器a传到服务器b\n```\nscp work@192.168.0.10:/home/work/source.txt work@192.168.0.11:/home/work/  #把192.168.0.10机器上的source.txt文件拷贝到192.168.0.11机器的/home/work目录下\n```\n\n4、scp -r\n```\nscp -r /home/work/sourcedir work@192.168.0.10:/home/work/  #拷贝文件夹，加-r参数\n```\n\n","source":"_posts/linux/linux-send-serve.md","raw":"---\ncategories: linux\ntags: linux服务器之间上传文件\ntitle: linux服务器之间上传文件\n---\n\n```\nscp [参数] <源地址（用户名@IP地址或主机名）>:<文件路径> <目的地址（用户名 @IP 地址或主机名）>:<文件路径>\n```\n\n\n1、文件从本地上传到服务器 \n```\nscp /home/work/source.txt 192.168.0.10:/home/work/ #把本地的source.txt文件拷贝到192.168.0.10机器上的/home/work目录下\n```\n\n2、文件从服务器下载到本地\n\n```\nscp work@192.168.0.10:/home/work/source.txt /home/work/  #把192.168.0.10机器上的source.txt文件拷贝到本地的/home/work目录下\n```\n\n3、文件从服务器a传到服务器b\n```\nscp work@192.168.0.10:/home/work/source.txt work@192.168.0.11:/home/work/  #把192.168.0.10机器上的source.txt文件拷贝到192.168.0.11机器的/home/work目录下\n```\n\n4、scp -r\n```\nscp -r /home/work/sourcedir work@192.168.0.10:/home/work/  #拷贝文件夹，加-r参数\n```\n\n","slug":"linux/linux-send-serve","published":1,"date":"2023-12-08T08:34:05.044Z","updated":"2023-12-08T08:34:05.045Z","_id":"clpwder1f0003haziaytzcxzm","comments":1,"layout":"post","photos":[],"link":"","content":"<pre class=\"highlight\"><span class=\"line\">scp [参数] &lt;源地址（用户名@IP地址或主机名）&gt;:&lt;文件路径&gt; &lt;目的地址（用户名 @IP 地址或主机名）&gt;:&lt;文件路径&gt;</span><br></pre>\n\n\n<p>1、文件从本地上传到服务器 </p>\n<pre class=\"highlight\"><span class=\"line\">scp /home/work/source.txt 192.168.0.10:/home/work/ #把本地的source.txt文件拷贝到192.168.0.10机器上的/home/work目录下</span><br></pre>\n\n<p>2、文件从服务器下载到本地</p>\n<pre class=\"highlight\"><span class=\"line\">scp work@192.168.0.10:/home/work/source.txt /home/work/  #把192.168.0.10机器上的source.txt文件拷贝到本地的/home/work目录下</span><br></pre>\n\n<p>3、文件从服务器a传到服务器b</p>\n<pre class=\"highlight\"><span class=\"line\">scp work@192.168.0.10:/home/work/source.txt work@192.168.0.11:/home/work/  #把192.168.0.10机器上的source.txt文件拷贝到192.168.0.11机器的/home/work目录下</span><br></pre>\n\n<p>4、scp -r</p>\n<pre class=\"highlight\"><span class=\"line\">scp -r /home/work/sourcedir work@192.168.0.10:/home/work/  #拷贝文件夹，加-r参数</span><br></pre>\n\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp [参数] &lt;源地址（用户名@IP地址或主机名）&gt;:&lt;文件路径&gt; &lt;目的地址（用户名 @IP 地址或主机名）&gt;:&lt;文件路径&gt;</span><br></pre></td></tr></table></figure>\n\n\n<p>1、文件从本地上传到服务器 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp /home/work/source.txt 192.168.0.10:/home/work/ #把本地的source.txt文件拷贝到192.168.0.10机器上的/home/work目录下</span><br></pre></td></tr></table></figure>\n\n<p>2、文件从服务器下载到本地</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp work@192.168.0.10:/home/work/source.txt /home/work/  #把192.168.0.10机器上的source.txt文件拷贝到本地的/home/work目录下</span><br></pre></td></tr></table></figure>\n\n<p>3、文件从服务器a传到服务器b</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp work@192.168.0.10:/home/work/source.txt work@192.168.0.11:/home/work/  #把192.168.0.10机器上的source.txt文件拷贝到192.168.0.11机器的/home/work目录下</span><br></pre></td></tr></table></figure>\n\n<p>4、scp -r</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r /home/work/sourcedir work@192.168.0.10:/home/work/  #拷贝文件夹，加-r参数</span><br></pre></td></tr></table></figure>\n\n"},{"title":"linux设置定时任务","_content":"\n## 1、linux自带crontab、没有需要安装\ncrontab -l 查看定时任务\ncrontab -e 编辑定时任务\n每五分钟执行  */5 * * * *\n\n每小时执行     0 * * * *\n\n每天执行       0 0 * * *\n\n每周执行       0 0 * * 0\n\n每月执行       0 0 1 * *\n\n每年执行       0 0 1 1 *\n\n## 2、写shell脚本 例如 hello.sh\n编写第一个shell文件，#!/bin/bash 是必须要写的，表示要是/bin/bash这个执行脚本的命令执行接下来写的脚本, echo \"hello world !!\"表示想前端打印一句话，具体看各自需求。\n\n\n```\n#!/bin/bash\necho \"hello world\"\n```\n\n这里假如echo之类的命令不是全局，需要设置软链接,如果后面命令为某文件内命令，需设置具体路径例如\n\n```\ndotnet /data/Rat\n```\n\n\n## 3、修改hello.sh权限\n\n```\nchmod 777 ./hello.sh\n```\n## 4、试执行 ./hello.sh,命令窗口会打印出hello world\n\n```\n./hello.sh\n```\n\n## 5、crontab -e 打开窗口编辑定时任务\n\n```\n*/5 * * * * /data/hello.sh\n```\n表示每5分钟执行一次hello.sh\n\n## 6、重新启动\n\n```\nservice crond restart\n```\n出现\n\n```\nRedirecting to /bin/systemctl restart crond.service\n```\n执行\n```\nsystemctl start crond\n```\n\n## 7、如何查看有没有定时执行任务\n\n```\ngrep \"hello\" /var/log/cron\n```\n会提示该路径有邮件\n\n```\n/var/spool/mail/root\n```\n通过cat /var/spool/mail/root 查看日志\n可以看到有hello world的执行时间\n到这已经完成了定时执行shell脚本的功能","source":"_posts/linux/linux-task.md","raw":"---\ncategories: linux\ntags: linux设置定时任务\ntitle: linux设置定时任务\n---\n\n## 1、linux自带crontab、没有需要安装\ncrontab -l 查看定时任务\ncrontab -e 编辑定时任务\n每五分钟执行  */5 * * * *\n\n每小时执行     0 * * * *\n\n每天执行       0 0 * * *\n\n每周执行       0 0 * * 0\n\n每月执行       0 0 1 * *\n\n每年执行       0 0 1 1 *\n\n## 2、写shell脚本 例如 hello.sh\n编写第一个shell文件，#!/bin/bash 是必须要写的，表示要是/bin/bash这个执行脚本的命令执行接下来写的脚本, echo \"hello world !!\"表示想前端打印一句话，具体看各自需求。\n\n\n```\n#!/bin/bash\necho \"hello world\"\n```\n\n这里假如echo之类的命令不是全局，需要设置软链接,如果后面命令为某文件内命令，需设置具体路径例如\n\n```\ndotnet /data/Rat\n```\n\n\n## 3、修改hello.sh权限\n\n```\nchmod 777 ./hello.sh\n```\n## 4、试执行 ./hello.sh,命令窗口会打印出hello world\n\n```\n./hello.sh\n```\n\n## 5、crontab -e 打开窗口编辑定时任务\n\n```\n*/5 * * * * /data/hello.sh\n```\n表示每5分钟执行一次hello.sh\n\n## 6、重新启动\n\n```\nservice crond restart\n```\n出现\n\n```\nRedirecting to /bin/systemctl restart crond.service\n```\n执行\n```\nsystemctl start crond\n```\n\n## 7、如何查看有没有定时执行任务\n\n```\ngrep \"hello\" /var/log/cron\n```\n会提示该路径有邮件\n\n```\n/var/spool/mail/root\n```\n通过cat /var/spool/mail/root 查看日志\n可以看到有hello world的执行时间\n到这已经完成了定时执行shell脚本的功能","slug":"linux/linux-task","published":1,"date":"2023-12-08T08:34:08.698Z","updated":"2023-12-08T08:34:08.698Z","_id":"clpwdetum0006hazicia40e40","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"1、linux自带crontab、没有需要安装\"><a href=\"#1、linux自带crontab、没有需要安装\" class=\"headerlink\" title=\"1、linux自带crontab、没有需要安装\"></a>1、linux自带crontab、没有需要安装</h2><p>crontab -l 查看定时任务<br>crontab -e 编辑定时任务<br>每五分钟执行  */5 * * * *</p>\n<p>每小时执行     0 * * * *</p>\n<p>每天执行       0 0 * * *</p>\n<p>每周执行       0 0 * * 0</p>\n<p>每月执行       0 0 1 * *</p>\n<p>每年执行       0 0 1 1 *</p>\n<h2 id=\"2、写shell脚本-例如-hello-sh\"><a href=\"#2、写shell脚本-例如-hello-sh\" class=\"headerlink\" title=\"2、写shell脚本 例如 hello.sh\"></a>2、写shell脚本 例如 hello.sh</h2><p>编写第一个shell文件，#!/bin/bash 是必须要写的，表示要是/bin/bash这个执行脚本的命令执行接下来写的脚本, echo “hello world !!”表示想前端打印一句话，具体看各自需求。</p>\n<pre class=\"highlight\"><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">echo &quot;hello world&quot;</span><br></pre>\n\n<p>这里假如echo之类的命令不是全局，需要设置软链接,如果后面命令为某文件内命令，需设置具体路径例如</p>\n<pre class=\"highlight\"><span class=\"line\">dotnet /data/Rat</span><br></pre>\n\n\n<h2 id=\"3、修改hello-sh权限\"><a href=\"#3、修改hello-sh权限\" class=\"headerlink\" title=\"3、修改hello.sh权限\"></a>3、修改hello.sh权限</h2><pre class=\"highlight\"><span class=\"line\">chmod 777 ./hello.sh</span><br></pre>\n<h2 id=\"4、试执行-hello-sh-命令窗口会打印出hello-world\"><a href=\"#4、试执行-hello-sh-命令窗口会打印出hello-world\" class=\"headerlink\" title=\"4、试执行 ./hello.sh,命令窗口会打印出hello world\"></a>4、试执行 ./hello.sh,命令窗口会打印出hello world</h2><pre class=\"highlight\"><span class=\"line\">./hello.sh</span><br></pre>\n\n<h2 id=\"5、crontab-e-打开窗口编辑定时任务\"><a href=\"#5、crontab-e-打开窗口编辑定时任务\" class=\"headerlink\" title=\"5、crontab -e 打开窗口编辑定时任务\"></a>5、crontab -e 打开窗口编辑定时任务</h2><pre class=\"highlight\"><span class=\"line\">*/5 * * * * /data/hello.sh</span><br></pre>\n<p>表示每5分钟执行一次hello.sh</p>\n<h2 id=\"6、重新启动\"><a href=\"#6、重新启动\" class=\"headerlink\" title=\"6、重新启动\"></a>6、重新启动</h2><pre class=\"highlight\"><span class=\"line\">service crond restart</span><br></pre>\n<p>出现</p>\n<pre class=\"highlight\"><span class=\"line\">Redirecting to /bin/systemctl restart crond.service</span><br></pre>\n<p>执行</p>\n<pre class=\"highlight\"><span class=\"line\">systemctl start crond</span><br></pre>\n\n<h2 id=\"7、如何查看有没有定时执行任务\"><a href=\"#7、如何查看有没有定时执行任务\" class=\"headerlink\" title=\"7、如何查看有没有定时执行任务\"></a>7、如何查看有没有定时执行任务</h2><pre class=\"highlight\"><span class=\"line\">grep &quot;hello&quot; /var/log/cron</span><br></pre>\n<p>会提示该路径有邮件</p>\n<pre class=\"highlight\"><span class=\"line\">/var/spool/mail/root</span><br></pre>\n<p>通过cat /var/spool/mail/root 查看日志<br>可以看到有hello world的执行时间<br>到这已经完成了定时执行shell脚本的功能</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1、linux自带crontab、没有需要安装\"><a href=\"#1、linux自带crontab、没有需要安装\" class=\"headerlink\" title=\"1、linux自带crontab、没有需要安装\"></a>1、linux自带crontab、没有需要安装</h2><p>crontab -l 查看定时任务<br>crontab -e 编辑定时任务<br>每五分钟执行  */5 * * * *</p>\n<p>每小时执行     0 * * * *</p>\n<p>每天执行       0 0 * * *</p>\n<p>每周执行       0 0 * * 0</p>\n<p>每月执行       0 0 1 * *</p>\n<p>每年执行       0 0 1 1 *</p>\n<h2 id=\"2、写shell脚本-例如-hello-sh\"><a href=\"#2、写shell脚本-例如-hello-sh\" class=\"headerlink\" title=\"2、写shell脚本 例如 hello.sh\"></a>2、写shell脚本 例如 hello.sh</h2><p>编写第一个shell文件，#!/bin/bash 是必须要写的，表示要是/bin/bash这个执行脚本的命令执行接下来写的脚本, echo “hello world !!”表示想前端打印一句话，具体看各自需求。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">echo &quot;hello world&quot;</span><br></pre></td></tr></table></figure>\n\n<p>这里假如echo之类的命令不是全局，需要设置软链接,如果后面命令为某文件内命令，需设置具体路径例如</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dotnet /data/Rat</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"3、修改hello-sh权限\"><a href=\"#3、修改hello-sh权限\" class=\"headerlink\" title=\"3、修改hello.sh权限\"></a>3、修改hello.sh权限</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 777 ./hello.sh</span><br></pre></td></tr></table></figure>\n<h2 id=\"4、试执行-hello-sh-命令窗口会打印出hello-world\"><a href=\"#4、试执行-hello-sh-命令窗口会打印出hello-world\" class=\"headerlink\" title=\"4、试执行 ./hello.sh,命令窗口会打印出hello world\"></a>4、试执行 ./hello.sh,命令窗口会打印出hello world</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./hello.sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5、crontab-e-打开窗口编辑定时任务\"><a href=\"#5、crontab-e-打开窗口编辑定时任务\" class=\"headerlink\" title=\"5、crontab -e 打开窗口编辑定时任务\"></a>5、crontab -e 打开窗口编辑定时任务</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*/5 * * * * /data/hello.sh</span><br></pre></td></tr></table></figure>\n<p>表示每5分钟执行一次hello.sh</p>\n<h2 id=\"6、重新启动\"><a href=\"#6、重新启动\" class=\"headerlink\" title=\"6、重新启动\"></a>6、重新启动</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service crond restart</span><br></pre></td></tr></table></figure>\n<p>出现</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Redirecting to /bin/systemctl restart crond.service</span><br></pre></td></tr></table></figure>\n<p>执行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start crond</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7、如何查看有没有定时执行任务\"><a href=\"#7、如何查看有没有定时执行任务\" class=\"headerlink\" title=\"7、如何查看有没有定时执行任务\"></a>7、如何查看有没有定时执行任务</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep &quot;hello&quot; /var/log/cron</span><br></pre></td></tr></table></figure>\n<p>会提示该路径有邮件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/var/spool/mail/root</span><br></pre></td></tr></table></figure>\n<p>通过cat /var/spool/mail/root 查看日志<br>可以看到有hello world的执行时间<br>到这已经完成了定时执行shell脚本的功能</p>\n"},{"title":"python生成apk","_content":"\n## 第一种方式：beeware\n\nbeeware 官网 ：<https://docs.beeware.org/en/latest/tutorial/tutorial-0.html>\n\n### 1、前提：前提需要下载python3\n\n### 2、可能遇到的问题：\n\n#### 1、只下载了platform-tools的情况下，需要单独下载新版 android sdk,由于android sdk官网已经不支持单独下载了，所以可以下载sdk manager的zip包\n\n#### 2、briefcase build android 过程中会提示无license\n\n可以通过进入sdk manager执行./sdkmanager --license 生成licens文件夹，复制到platform-tools/tools 内\n\n#### 3、可能提示无ndk等问题，需要下载ndk\n\n## 第二种方式：kivy\n\n","source":"_posts/python/python-apk.md","raw":"---\ncategories: python\ntags: python生成apk\ntitle: python生成apk\n---\n\n## 第一种方式：beeware\n\nbeeware 官网 ：<https://docs.beeware.org/en/latest/tutorial/tutorial-0.html>\n\n### 1、前提：前提需要下载python3\n\n### 2、可能遇到的问题：\n\n#### 1、只下载了platform-tools的情况下，需要单独下载新版 android sdk,由于android sdk官网已经不支持单独下载了，所以可以下载sdk manager的zip包\n\n#### 2、briefcase build android 过程中会提示无license\n\n可以通过进入sdk manager执行./sdkmanager --license 生成licens文件夹，复制到platform-tools/tools 内\n\n#### 3、可能提示无ndk等问题，需要下载ndk\n\n## 第二种方式：kivy\n\n","slug":"python/python-apk","published":1,"date":"2023-02-02T06:51:06.532Z","updated":"2023-02-02T07:37:06.355Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpwezckr0000a1ziheprepxn","content":"<h2 id=\"第一种方式：beeware\"><a href=\"#第一种方式：beeware\" class=\"headerlink\" title=\"第一种方式：beeware\"></a>第一种方式：beeware</h2><p>beeware 官网 ：<a href=\"https://docs.beeware.org/en/latest/tutorial/tutorial-0.html\">https://docs.beeware.org/en/latest/tutorial/tutorial-0.html</a></p>\n<h3 id=\"1、前提：前提需要下载python3\"><a href=\"#1、前提：前提需要下载python3\" class=\"headerlink\" title=\"1、前提：前提需要下载python3\"></a>1、前提：前提需要下载python3</h3><h3 id=\"2、可能遇到的问题：\"><a href=\"#2、可能遇到的问题：\" class=\"headerlink\" title=\"2、可能遇到的问题：\"></a>2、可能遇到的问题：</h3><h4 id=\"1、只下载了platform-tools的情况下，需要单独下载新版-android-sdk-由于android-sdk官网已经不支持单独下载了，所以可以下载sdk-manager的zip包\"><a href=\"#1、只下载了platform-tools的情况下，需要单独下载新版-android-sdk-由于android-sdk官网已经不支持单独下载了，所以可以下载sdk-manager的zip包\" class=\"headerlink\" title=\"1、只下载了platform-tools的情况下，需要单独下载新版 android sdk,由于android sdk官网已经不支持单独下载了，所以可以下载sdk manager的zip包\"></a>1、只下载了platform-tools的情况下，需要单独下载新版 android sdk,由于android sdk官网已经不支持单独下载了，所以可以下载sdk manager的zip包</h4><h4 id=\"2、briefcase-build-android-过程中会提示无license\"><a href=\"#2、briefcase-build-android-过程中会提示无license\" class=\"headerlink\" title=\"2、briefcase build android 过程中会提示无license\"></a>2、briefcase build android 过程中会提示无license</h4><p>可以通过进入sdk manager执行./sdkmanager –license 生成licens文件夹，复制到platform-tools/tools 内</p>\n<h4 id=\"3、可能提示无ndk等问题，需要下载ndk\"><a href=\"#3、可能提示无ndk等问题，需要下载ndk\" class=\"headerlink\" title=\"3、可能提示无ndk等问题，需要下载ndk\"></a>3、可能提示无ndk等问题，需要下载ndk</h4><h2 id=\"第二种方式：kivy\"><a href=\"#第二种方式：kivy\" class=\"headerlink\" title=\"第二种方式：kivy\"></a>第二种方式：kivy</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"第一种方式：beeware\"><a href=\"#第一种方式：beeware\" class=\"headerlink\" title=\"第一种方式：beeware\"></a>第一种方式：beeware</h2><p>beeware 官网 ：<a href=\"https://docs.beeware.org/en/latest/tutorial/tutorial-0.html\">https://docs.beeware.org/en/latest/tutorial/tutorial-0.html</a></p>\n<h3 id=\"1、前提：前提需要下载python3\"><a href=\"#1、前提：前提需要下载python3\" class=\"headerlink\" title=\"1、前提：前提需要下载python3\"></a>1、前提：前提需要下载python3</h3><h3 id=\"2、可能遇到的问题：\"><a href=\"#2、可能遇到的问题：\" class=\"headerlink\" title=\"2、可能遇到的问题：\"></a>2、可能遇到的问题：</h3><h4 id=\"1、只下载了platform-tools的情况下，需要单独下载新版-android-sdk-由于android-sdk官网已经不支持单独下载了，所以可以下载sdk-manager的zip包\"><a href=\"#1、只下载了platform-tools的情况下，需要单独下载新版-android-sdk-由于android-sdk官网已经不支持单独下载了，所以可以下载sdk-manager的zip包\" class=\"headerlink\" title=\"1、只下载了platform-tools的情况下，需要单独下载新版 android sdk,由于android sdk官网已经不支持单独下载了，所以可以下载sdk manager的zip包\"></a>1、只下载了platform-tools的情况下，需要单独下载新版 android sdk,由于android sdk官网已经不支持单独下载了，所以可以下载sdk manager的zip包</h4><h4 id=\"2、briefcase-build-android-过程中会提示无license\"><a href=\"#2、briefcase-build-android-过程中会提示无license\" class=\"headerlink\" title=\"2、briefcase build android 过程中会提示无license\"></a>2、briefcase build android 过程中会提示无license</h4><p>可以通过进入sdk manager执行./sdkmanager –license 生成licens文件夹，复制到platform-tools/tools 内</p>\n<h4 id=\"3、可能提示无ndk等问题，需要下载ndk\"><a href=\"#3、可能提示无ndk等问题，需要下载ndk\" class=\"headerlink\" title=\"3、可能提示无ndk等问题，需要下载ndk\"></a>3、可能提示无ndk等问题，需要下载ndk</h4><h2 id=\"第二种方式：kivy\"><a href=\"#第二种方式：kivy\" class=\"headerlink\" title=\"第二种方式：kivy\"></a>第二种方式：kivy</h2>"},{"title":"谷歌无跨域模式","_content":"\n## 1、新建CORS文件夹\n\n## 2、命令窗口输入\n\n```\nopen -n /Applications/Google\\ Chrome.app/ --args --disable-web-security  --user-data-dir=/Users/admin/Desktop/CORS\n```\n\n","source":"_posts/react/react-cors.md","raw":"---\ncategories: react\ntags: 谷歌无跨域模式\ntitle: 谷歌无跨域模式\n---\n\n## 1、新建CORS文件夹\n\n## 2、命令窗口输入\n\n```\nopen -n /Applications/Google\\ Chrome.app/ --args --disable-web-security  --user-data-dir=/Users/admin/Desktop/CORS\n```\n\n","slug":"react/react-cors","published":1,"date":"2023-02-02T06:54:00.162Z","updated":"2023-02-02T07:37:09.925Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpwezcl40001a1zi02qth5pm","content":"<h2 id=\"1、新建CORS文件夹\"><a href=\"#1、新建CORS文件夹\" class=\"headerlink\" title=\"1、新建CORS文件夹\"></a>1、新建CORS文件夹</h2><h2 id=\"2、命令窗口输入\"><a href=\"#2、命令窗口输入\" class=\"headerlink\" title=\"2、命令窗口输入\"></a>2、命令窗口输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">open -n /Applications/Google\\ Chrome.app/ --args --disable-web-security  --user-data-dir=/Users/admin/Desktop/CORS</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1、新建CORS文件夹\"><a href=\"#1、新建CORS文件夹\" class=\"headerlink\" title=\"1、新建CORS文件夹\"></a>1、新建CORS文件夹</h2><h2 id=\"2、命令窗口输入\"><a href=\"#2、命令窗口输入\" class=\"headerlink\" title=\"2、命令窗口输入\"></a>2、命令窗口输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">open -n /Applications/Google\\ Chrome.app/ --args --disable-web-security  --user-data-dir=/Users/admin/Desktop/CORS</span><br></pre></td></tr></table></figure>\n\n"},{"title":"react配置装饰器","_content":"\n# react配置装饰器\n\n```javascript\nnpm i --save-dev customize-cra react-app-rewired\n```\n\n## 1.  在根目录下新建 config-overrides.js 文件并写入以下内容\n\n```javascript\nconst {\n    override,\n    addDecoratorsLegacy,\n    disableEsLint\n} = require(\"customize-cra\");\n\nmodule.exports = override(\n    // enable legacy decorators babel plugin\n    addDecoratorsLegacy(),\n\n    // disable eslint in webpack\n    disableEsLint()\n);\n```\n\n## 2.  修改 package.json 文件\n\n```javascript\n\"scripts\": {\n  \"start\": \"react-app-rewired start\",\n  \"build\": \"react-app-rewired build\",\n  \"test\": \"react-app-rewired test\",\n  \"eject\": \"react-scripts eject\"\n}\n```\n\n```javascript\nnpm i --save-dev @babel/plugin-proposal-decorators\n```\n\n## 3.  创建.babelrc\n\n```javascript\n{\n  \"presets\": [\"@babel/preset-env\", \"react-app\"],\n  \"plugins\": [\n      // [\"@babel/plugin-syntax-dynamic-import\"],\n      [\"@babel/plugin-proposal-decorators\", { \"legacy\": true }],\n      [\"@babel/plugin-proposal-class-properties\", { \"loose\": true }],\n      [\n        \"import\",\n        {\n          \"libraryName\": \"antd\",\n          \"style\": \"css\"\n        }\n      ]\n  ]\n}\n```\n\n## 4 重启\n\n\n","source":"_posts/react/react-decoration.md","raw":"---\ncategories: react\ntags: react配置装饰器\ntitle: react配置装饰器\n---\n\n# react配置装饰器\n\n```javascript\nnpm i --save-dev customize-cra react-app-rewired\n```\n\n## 1.  在根目录下新建 config-overrides.js 文件并写入以下内容\n\n```javascript\nconst {\n    override,\n    addDecoratorsLegacy,\n    disableEsLint\n} = require(\"customize-cra\");\n\nmodule.exports = override(\n    // enable legacy decorators babel plugin\n    addDecoratorsLegacy(),\n\n    // disable eslint in webpack\n    disableEsLint()\n);\n```\n\n## 2.  修改 package.json 文件\n\n```javascript\n\"scripts\": {\n  \"start\": \"react-app-rewired start\",\n  \"build\": \"react-app-rewired build\",\n  \"test\": \"react-app-rewired test\",\n  \"eject\": \"react-scripts eject\"\n}\n```\n\n```javascript\nnpm i --save-dev @babel/plugin-proposal-decorators\n```\n\n## 3.  创建.babelrc\n\n```javascript\n{\n  \"presets\": [\"@babel/preset-env\", \"react-app\"],\n  \"plugins\": [\n      // [\"@babel/plugin-syntax-dynamic-import\"],\n      [\"@babel/plugin-proposal-decorators\", { \"legacy\": true }],\n      [\"@babel/plugin-proposal-class-properties\", { \"loose\": true }],\n      [\n        \"import\",\n        {\n          \"libraryName\": \"antd\",\n          \"style\": \"css\"\n        }\n      ]\n  ]\n}\n```\n\n## 4 重启\n\n\n","slug":"react/react-decoration","published":1,"date":"2023-02-02T06:52:35.368Z","updated":"2023-02-02T07:37:17.195Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpwezclc0003a1zig8gj3th7","content":"<h1 id=\"react配置装饰器\"><a href=\"#react配置装饰器\" class=\"headerlink\" title=\"react配置装饰器\"></a>react配置装饰器</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i --save-dev customize-cra react-app-rewired</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-在根目录下新建-config-overrides-js-文件并写入以下内容\"><a href=\"#1-在根目录下新建-config-overrides-js-文件并写入以下内容\" class=\"headerlink\" title=\"1.  在根目录下新建 config-overrides.js 文件并写入以下内容\"></a>1.  在根目录下新建 config-overrides.js 文件并写入以下内容</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    override,</span><br><span class=\"line\">    addDecoratorsLegacy,</span><br><span class=\"line\">    disableEsLint</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;customize-cra&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">override</span>(</span><br><span class=\"line\">    <span class=\"comment\">// enable legacy decorators babel plugin</span></span><br><span class=\"line\">    <span class=\"title function_\">addDecoratorsLegacy</span>(),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// disable eslint in webpack</span></span><br><span class=\"line\">    <span class=\"title function_\">disableEsLint</span>()</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-修改-package-json-文件\"><a href=\"#2-修改-package-json-文件\" class=\"headerlink\" title=\"2.  修改 package.json 文件\"></a>2.  修改 package.json 文件</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;start&quot;</span>: <span class=\"string\">&quot;react-app-rewired start&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;build&quot;</span>: <span class=\"string\">&quot;react-app-rewired build&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;test&quot;</span>: <span class=\"string\">&quot;react-app-rewired test&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;eject&quot;</span>: <span class=\"string\">&quot;react-scripts eject&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i --save-dev @babel/plugin-proposal-decorators</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-创建-babelrc\"><a href=\"#3-创建-babelrc\" class=\"headerlink\" title=\"3.  创建.babelrc\"></a>3.  创建.babelrc</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;presets&quot;</span>: [<span class=\"string\">&quot;@babel/preset-env&quot;</span>, <span class=\"string\">&quot;react-app&quot;</span>],</span><br><span class=\"line\">  <span class=\"string\">&quot;plugins&quot;</span>: [</span><br><span class=\"line\">      <span class=\"comment\">// [&quot;@babel/plugin-syntax-dynamic-import&quot;],</span></span><br><span class=\"line\">      [<span class=\"string\">&quot;@babel/plugin-proposal-decorators&quot;</span>, &#123; <span class=\"string\">&quot;legacy&quot;</span>: <span class=\"literal\">true</span> &#125;],</span><br><span class=\"line\">      [<span class=\"string\">&quot;@babel/plugin-proposal-class-properties&quot;</span>, &#123; <span class=\"string\">&quot;loose&quot;</span>: <span class=\"literal\">true</span> &#125;],</span><br><span class=\"line\">      [</span><br><span class=\"line\">        <span class=\"string\">&quot;import&quot;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;libraryName&quot;</span>: <span class=\"string\">&quot;antd&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;style&quot;</span>: <span class=\"string\">&quot;css&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-重启\"><a href=\"#4-重启\" class=\"headerlink\" title=\"4 重启\"></a>4 重启</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"react配置装饰器\"><a href=\"#react配置装饰器\" class=\"headerlink\" title=\"react配置装饰器\"></a>react配置装饰器</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i --save-dev customize-cra react-app-rewired</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-在根目录下新建-config-overrides-js-文件并写入以下内容\"><a href=\"#1-在根目录下新建-config-overrides-js-文件并写入以下内容\" class=\"headerlink\" title=\"1.  在根目录下新建 config-overrides.js 文件并写入以下内容\"></a>1.  在根目录下新建 config-overrides.js 文件并写入以下内容</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    override,</span><br><span class=\"line\">    addDecoratorsLegacy,</span><br><span class=\"line\">    disableEsLint</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;customize-cra&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">override</span>(</span><br><span class=\"line\">    <span class=\"comment\">// enable legacy decorators babel plugin</span></span><br><span class=\"line\">    <span class=\"title function_\">addDecoratorsLegacy</span>(),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// disable eslint in webpack</span></span><br><span class=\"line\">    <span class=\"title function_\">disableEsLint</span>()</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-修改-package-json-文件\"><a href=\"#2-修改-package-json-文件\" class=\"headerlink\" title=\"2.  修改 package.json 文件\"></a>2.  修改 package.json 文件</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;start&quot;</span>: <span class=\"string\">&quot;react-app-rewired start&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;build&quot;</span>: <span class=\"string\">&quot;react-app-rewired build&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;test&quot;</span>: <span class=\"string\">&quot;react-app-rewired test&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;eject&quot;</span>: <span class=\"string\">&quot;react-scripts eject&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i --save-dev @babel/plugin-proposal-decorators</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-创建-babelrc\"><a href=\"#3-创建-babelrc\" class=\"headerlink\" title=\"3.  创建.babelrc\"></a>3.  创建.babelrc</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;presets&quot;</span>: [<span class=\"string\">&quot;@babel/preset-env&quot;</span>, <span class=\"string\">&quot;react-app&quot;</span>],</span><br><span class=\"line\">  <span class=\"string\">&quot;plugins&quot;</span>: [</span><br><span class=\"line\">      <span class=\"comment\">// [&quot;@babel/plugin-syntax-dynamic-import&quot;],</span></span><br><span class=\"line\">      [<span class=\"string\">&quot;@babel/plugin-proposal-decorators&quot;</span>, &#123; <span class=\"string\">&quot;legacy&quot;</span>: <span class=\"literal\">true</span> &#125;],</span><br><span class=\"line\">      [<span class=\"string\">&quot;@babel/plugin-proposal-class-properties&quot;</span>, &#123; <span class=\"string\">&quot;loose&quot;</span>: <span class=\"literal\">true</span> &#125;],</span><br><span class=\"line\">      [</span><br><span class=\"line\">        <span class=\"string\">&quot;import&quot;</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;libraryName&quot;</span>: <span class=\"string\">&quot;antd&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;style&quot;</span>: <span class=\"string\">&quot;css&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-重启\"><a href=\"#4-重启\" class=\"headerlink\" title=\"4 重启\"></a>4 重启</h2>"},{"title":"基于react-dnd实现拖拽、排序","_content":"\n# react-dnd\n\n官网地址：<https://react-dnd.github.io/react-dnd/about>\n\n### 1、安装\n\n```javascript\nnpm install react-dnd react-dnd-html5-backend\n```\n\n### 2、 使用\n\n##### 2.1、 DndProvider\n\nDndProvider 组件为您的应用程序提供 React-DnD 功能。通过backend prop 注入\n\n```javascript\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Home from '@/pages/Home';\n\nexport default function BaseLayout() {\n    return (\n        <DndProvider backend={ HTML5Backend }>\n            <Home />\n        </DndProvider>\n    )\n}\n\n\n```\n\n##### 2.2、 拖拽排序\n\n官方文档中也存在示例\n\n```javascript\n\n  const [{ isDragging }, drag, dragPreview] = useDrag(\n    () => ({\n      type: ItemTypes.Box,\n      item: { id, originalIndex },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n      end: (item, monitor) => {\n        const { id: droppedId, originalIndex } = item\n        const didDrop = monitor.didDrop()\n        // const { index: overIndex } = findCard(droppedId)\n        if (!didDrop) {\n          moveCard(droppedId, originalIndex)\n          return\n        }\n      },\n    }),\n    [id, originalIndex, moveCard],\n  )\n\n  const [{ isOver, canDrop }, drop] = useDrop(\n    () => ({\n      accept: ItemTypes.Box,\n      collect: (monitor) => ({\n        isOver: monitor.isOver({}),\n        canDrop: monitor.canDrop(),\n      }),\n      hover:(item: cardBase, monitor) =>{\n        const { id: draggedId } = item\n        if(!draggedId) {\n          const hoverBoundingRect = nodeRef?.current?.getBoundingClientRect() as DOMRect;\n          const hoverMiddleY = (hoverBoundingRect?.bottom - hoverBoundingRect?.top) / 2;\n          const clientOffset = monitor.getClientOffset();\n          if (clientOffset) {\n            // Get pixels to the top\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n            if (hoverClientY <= hoverMiddleY) {\n              positionRef.current = 'top'\n            }\n            // Dragging upwards\n            if (hoverClientY > hoverMiddleY) {\n              positionRef.current = 'bottom'\n            }\n          }\n          return\n        }\n        if (draggedId !== id) {\n          console.log(131231, )\n          const { index: overIndex } = findCard(id)\n          moveCard(draggedId, overIndex)\n        }\n        \n      },\n      drop:(item: cardBase, monitor)=> {\n        const { id: currentId } = item\n        if(currentId) return\n        let { index: overIndex } = findCard(id)\n        if(positionRef.current === 'bottom') overIndex += 1\n        const newItem = { ...item, id: uuidv4() }\n        insertCard(overIndex, newItem)\n        setDragingfunc(false)\n        const formData = createForm({\n          effects(){\n            onFormValuesChange(form=>{\n              newItem.data = form.values\n            })\n          }\n        })\n        dispatch({\n          type:\"homeModel/setFormBox\",\n          payload:{\n            visible:true,\n            currentCard:newItem,\n          },\n          callback:()=>{\n            toggleForm(formData)\n          }\n        })\n        positionRef.current = null\n      },\n    }),\n    [findCard, moveCard],\n  )\n```\n\n\n\n","source":"_posts/react/react-dnd.md","raw":"---\ncategories: react\ntags: 基于react-dnd实现拖拽、排序\ntitle: 基于react-dnd实现拖拽、排序\n---\n\n# react-dnd\n\n官网地址：<https://react-dnd.github.io/react-dnd/about>\n\n### 1、安装\n\n```javascript\nnpm install react-dnd react-dnd-html5-backend\n```\n\n### 2、 使用\n\n##### 2.1、 DndProvider\n\nDndProvider 组件为您的应用程序提供 React-DnD 功能。通过backend prop 注入\n\n```javascript\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Home from '@/pages/Home';\n\nexport default function BaseLayout() {\n    return (\n        <DndProvider backend={ HTML5Backend }>\n            <Home />\n        </DndProvider>\n    )\n}\n\n\n```\n\n##### 2.2、 拖拽排序\n\n官方文档中也存在示例\n\n```javascript\n\n  const [{ isDragging }, drag, dragPreview] = useDrag(\n    () => ({\n      type: ItemTypes.Box,\n      item: { id, originalIndex },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n      end: (item, monitor) => {\n        const { id: droppedId, originalIndex } = item\n        const didDrop = monitor.didDrop()\n        // const { index: overIndex } = findCard(droppedId)\n        if (!didDrop) {\n          moveCard(droppedId, originalIndex)\n          return\n        }\n      },\n    }),\n    [id, originalIndex, moveCard],\n  )\n\n  const [{ isOver, canDrop }, drop] = useDrop(\n    () => ({\n      accept: ItemTypes.Box,\n      collect: (monitor) => ({\n        isOver: monitor.isOver({}),\n        canDrop: monitor.canDrop(),\n      }),\n      hover:(item: cardBase, monitor) =>{\n        const { id: draggedId } = item\n        if(!draggedId) {\n          const hoverBoundingRect = nodeRef?.current?.getBoundingClientRect() as DOMRect;\n          const hoverMiddleY = (hoverBoundingRect?.bottom - hoverBoundingRect?.top) / 2;\n          const clientOffset = monitor.getClientOffset();\n          if (clientOffset) {\n            // Get pixels to the top\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n            if (hoverClientY <= hoverMiddleY) {\n              positionRef.current = 'top'\n            }\n            // Dragging upwards\n            if (hoverClientY > hoverMiddleY) {\n              positionRef.current = 'bottom'\n            }\n          }\n          return\n        }\n        if (draggedId !== id) {\n          console.log(131231, )\n          const { index: overIndex } = findCard(id)\n          moveCard(draggedId, overIndex)\n        }\n        \n      },\n      drop:(item: cardBase, monitor)=> {\n        const { id: currentId } = item\n        if(currentId) return\n        let { index: overIndex } = findCard(id)\n        if(positionRef.current === 'bottom') overIndex += 1\n        const newItem = { ...item, id: uuidv4() }\n        insertCard(overIndex, newItem)\n        setDragingfunc(false)\n        const formData = createForm({\n          effects(){\n            onFormValuesChange(form=>{\n              newItem.data = form.values\n            })\n          }\n        })\n        dispatch({\n          type:\"homeModel/setFormBox\",\n          payload:{\n            visible:true,\n            currentCard:newItem,\n          },\n          callback:()=>{\n            toggleForm(formData)\n          }\n        })\n        positionRef.current = null\n      },\n    }),\n    [findCard, moveCard],\n  )\n```\n\n\n\n","slug":"react/react-dnd","published":1,"date":"2023-02-02T07:06:45.218Z","updated":"2023-02-02T07:37:20.021Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpwezclg0005a1zigut732su","content":"<h1 id=\"react-dnd\"><a href=\"#react-dnd\" class=\"headerlink\" title=\"react-dnd\"></a>react-dnd</h1><p>官网地址：<a href=\"https://react-dnd.github.io/react-dnd/about\">https://react-dnd.github.io/react-dnd/about</a></p>\n<h3 id=\"1、安装\"><a href=\"#1、安装\" class=\"headerlink\" title=\"1、安装\"></a>1、安装</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install react-dnd react-dnd-html5-backend</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、-使用\"><a href=\"#2、-使用\" class=\"headerlink\" title=\"2、 使用\"></a>2、 使用</h3><h5 id=\"2-1、-DndProvider\"><a href=\"#2-1、-DndProvider\" class=\"headerlink\" title=\"2.1、 DndProvider\"></a>2.1、 DndProvider</h5><p>DndProvider 组件为您的应用程序提供 React-DnD 功能。通过backend prop 注入</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">DndProvider</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dnd&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">HTML5Backend</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dnd-html5-backend&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Home</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/pages/Home&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">BaseLayout</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">DndProvider</span> <span class=\"attr\">backend</span>=<span class=\"string\">&#123;</span> <span class=\"attr\">HTML5Backend</span> &#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Home</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">DndProvider</span>&gt;</span></span></span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-2、-拖拽排序\"><a href=\"#2-2、-拖拽排序\" class=\"headerlink\" title=\"2.2、 拖拽排序\"></a>2.2、 拖拽排序</h5><p>官方文档中也存在示例</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> [&#123; isDragging &#125;, drag, dragPreview] = <span class=\"title function_\">useDrag</span>(</span><br><span class=\"line\">  <span class=\"function\">() =&gt;</span> (&#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"title class_\">ItemTypes</span>.<span class=\"property\">Box</span>,</span><br><span class=\"line\">    <span class=\"attr\">item</span>: &#123; id, originalIndex &#125;,</span><br><span class=\"line\">    <span class=\"attr\">collect</span>: <span class=\"function\">(<span class=\"params\">monitor</span>) =&gt;</span> (&#123;</span><br><span class=\"line\">      <span class=\"attr\">isDragging</span>: monitor.<span class=\"title function_\">isDragging</span>(),</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"attr\">end</span>: <span class=\"function\">(<span class=\"params\">item, monitor</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; <span class=\"attr\">id</span>: droppedId, originalIndex &#125; = item</span><br><span class=\"line\">      <span class=\"keyword\">const</span> didDrop = monitor.<span class=\"title function_\">didDrop</span>()</span><br><span class=\"line\">      <span class=\"comment\">// const &#123; index: overIndex &#125; = findCard(droppedId)</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!didDrop) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">moveCard</span>(droppedId, originalIndex)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  [id, originalIndex, moveCard],</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> [&#123; isOver, canDrop &#125;, drop] = <span class=\"title function_\">useDrop</span>(</span><br><span class=\"line\">  <span class=\"function\">() =&gt;</span> (&#123;</span><br><span class=\"line\">    <span class=\"attr\">accept</span>: <span class=\"title class_\">ItemTypes</span>.<span class=\"property\">Box</span>,</span><br><span class=\"line\">    <span class=\"attr\">collect</span>: <span class=\"function\">(<span class=\"params\">monitor</span>) =&gt;</span> (&#123;</span><br><span class=\"line\">      <span class=\"attr\">isOver</span>: monitor.<span class=\"title function_\">isOver</span>(&#123;&#125;),</span><br><span class=\"line\">      <span class=\"attr\">canDrop</span>: monitor.<span class=\"title function_\">canDrop</span>(),</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"attr\">hover</span>:<span class=\"function\">(<span class=\"params\">item: cardBase, monitor</span>) =&gt;</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; <span class=\"attr\">id</span>: draggedId &#125; = item</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!draggedId) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> hoverBoundingRect = nodeRef?.<span class=\"property\">current</span>?.<span class=\"title function_\">getBoundingClientRect</span>() <span class=\"keyword\">as</span> <span class=\"title class_\">DOMRect</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> hoverMiddleY = (hoverBoundingRect?.<span class=\"property\">bottom</span> - hoverBoundingRect?.<span class=\"property\">top</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> clientOffset = monitor.<span class=\"title function_\">getClientOffset</span>();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (clientOffset) &#123;</span><br><span class=\"line\">          <span class=\"comment\">// Get pixels to the top</span></span><br><span class=\"line\">          <span class=\"keyword\">const</span> hoverClientY = clientOffset.<span class=\"property\">y</span> - hoverBoundingRect.<span class=\"property\">top</span>;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (hoverClientY &lt;= hoverMiddleY) &#123;</span><br><span class=\"line\">            positionRef.<span class=\"property\">current</span> = <span class=\"string\">&#x27;top&#x27;</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"comment\">// Dragging upwards</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (hoverClientY &gt; hoverMiddleY) &#123;</span><br><span class=\"line\">            positionRef.<span class=\"property\">current</span> = <span class=\"string\">&#x27;bottom&#x27;</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (draggedId !== id) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">131231</span>, )</span><br><span class=\"line\">        <span class=\"keyword\">const</span> &#123; <span class=\"attr\">index</span>: overIndex &#125; = <span class=\"title function_\">findCard</span>(id)</span><br><span class=\"line\">        <span class=\"title function_\">moveCard</span>(draggedId, overIndex)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">drop</span>:<span class=\"function\">(<span class=\"params\">item: cardBase, monitor</span>)=&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; <span class=\"attr\">id</span>: currentId &#125; = item</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(currentId) <span class=\"keyword\">return</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> &#123; <span class=\"attr\">index</span>: overIndex &#125; = <span class=\"title function_\">findCard</span>(id)</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(positionRef.<span class=\"property\">current</span> === <span class=\"string\">&#x27;bottom&#x27;</span>) overIndex += <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> newItem = &#123; ...item, <span class=\"attr\">id</span>: <span class=\"title function_\">uuidv4</span>() &#125;</span><br><span class=\"line\">      <span class=\"title function_\">insertCard</span>(overIndex, newItem)</span><br><span class=\"line\">      <span class=\"title function_\">setDragingfunc</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">      <span class=\"keyword\">const</span> formData = <span class=\"title function_\">createForm</span>(&#123;</span><br><span class=\"line\">        <span class=\"title function_\">effects</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">          <span class=\"title function_\">onFormValuesChange</span>(<span class=\"function\"><span class=\"params\">form</span>=&gt;</span>&#123;</span><br><span class=\"line\">            newItem.<span class=\"property\">data</span> = form.<span class=\"property\">values</span></span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"title function_\">dispatch</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>:<span class=\"string\">&quot;homeModel/setFormBox&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">payload</span>:&#123;</span><br><span class=\"line\">          <span class=\"attr\">visible</span>:<span class=\"literal\">true</span>,</span><br><span class=\"line\">          <span class=\"attr\">currentCard</span>:newItem,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">callback</span>:<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">          <span class=\"title function_\">toggleForm</span>(formData)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      positionRef.<span class=\"property\">current</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  [findCard, moveCard],</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"react-dnd\"><a href=\"#react-dnd\" class=\"headerlink\" title=\"react-dnd\"></a>react-dnd</h1><p>官网地址：<a href=\"https://react-dnd.github.io/react-dnd/about\">https://react-dnd.github.io/react-dnd/about</a></p>\n<h3 id=\"1、安装\"><a href=\"#1、安装\" class=\"headerlink\" title=\"1、安装\"></a>1、安装</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install react-dnd react-dnd-html5-backend</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、-使用\"><a href=\"#2、-使用\" class=\"headerlink\" title=\"2、 使用\"></a>2、 使用</h3><h5 id=\"2-1、-DndProvider\"><a href=\"#2-1、-DndProvider\" class=\"headerlink\" title=\"2.1、 DndProvider\"></a>2.1、 DndProvider</h5><p>DndProvider 组件为您的应用程序提供 React-DnD 功能。通过backend prop 注入</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">DndProvider</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dnd&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">HTML5Backend</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dnd-html5-backend&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Home</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/pages/Home&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">BaseLayout</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">DndProvider</span> <span class=\"attr\">backend</span>=<span class=\"string\">&#123;</span> <span class=\"attr\">HTML5Backend</span> &#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Home</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">DndProvider</span>&gt;</span></span></span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-2、-拖拽排序\"><a href=\"#2-2、-拖拽排序\" class=\"headerlink\" title=\"2.2、 拖拽排序\"></a>2.2、 拖拽排序</h5><p>官方文档中也存在示例</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> [&#123; isDragging &#125;, drag, dragPreview] = <span class=\"title function_\">useDrag</span>(</span><br><span class=\"line\">  <span class=\"function\">() =&gt;</span> (&#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"title class_\">ItemTypes</span>.<span class=\"property\">Box</span>,</span><br><span class=\"line\">    <span class=\"attr\">item</span>: &#123; id, originalIndex &#125;,</span><br><span class=\"line\">    <span class=\"attr\">collect</span>: <span class=\"function\">(<span class=\"params\">monitor</span>) =&gt;</span> (&#123;</span><br><span class=\"line\">      <span class=\"attr\">isDragging</span>: monitor.<span class=\"title function_\">isDragging</span>(),</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"attr\">end</span>: <span class=\"function\">(<span class=\"params\">item, monitor</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; <span class=\"attr\">id</span>: droppedId, originalIndex &#125; = item</span><br><span class=\"line\">      <span class=\"keyword\">const</span> didDrop = monitor.<span class=\"title function_\">didDrop</span>()</span><br><span class=\"line\">      <span class=\"comment\">// const &#123; index: overIndex &#125; = findCard(droppedId)</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!didDrop) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">moveCard</span>(droppedId, originalIndex)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  [id, originalIndex, moveCard],</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> [&#123; isOver, canDrop &#125;, drop] = <span class=\"title function_\">useDrop</span>(</span><br><span class=\"line\">  <span class=\"function\">() =&gt;</span> (&#123;</span><br><span class=\"line\">    <span class=\"attr\">accept</span>: <span class=\"title class_\">ItemTypes</span>.<span class=\"property\">Box</span>,</span><br><span class=\"line\">    <span class=\"attr\">collect</span>: <span class=\"function\">(<span class=\"params\">monitor</span>) =&gt;</span> (&#123;</span><br><span class=\"line\">      <span class=\"attr\">isOver</span>: monitor.<span class=\"title function_\">isOver</span>(&#123;&#125;),</span><br><span class=\"line\">      <span class=\"attr\">canDrop</span>: monitor.<span class=\"title function_\">canDrop</span>(),</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"attr\">hover</span>:<span class=\"function\">(<span class=\"params\">item: cardBase, monitor</span>) =&gt;</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; <span class=\"attr\">id</span>: draggedId &#125; = item</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!draggedId) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> hoverBoundingRect = nodeRef?.<span class=\"property\">current</span>?.<span class=\"title function_\">getBoundingClientRect</span>() <span class=\"keyword\">as</span> <span class=\"title class_\">DOMRect</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> hoverMiddleY = (hoverBoundingRect?.<span class=\"property\">bottom</span> - hoverBoundingRect?.<span class=\"property\">top</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> clientOffset = monitor.<span class=\"title function_\">getClientOffset</span>();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (clientOffset) &#123;</span><br><span class=\"line\">          <span class=\"comment\">// Get pixels to the top</span></span><br><span class=\"line\">          <span class=\"keyword\">const</span> hoverClientY = clientOffset.<span class=\"property\">y</span> - hoverBoundingRect.<span class=\"property\">top</span>;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (hoverClientY &lt;= hoverMiddleY) &#123;</span><br><span class=\"line\">            positionRef.<span class=\"property\">current</span> = <span class=\"string\">&#x27;top&#x27;</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"comment\">// Dragging upwards</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (hoverClientY &gt; hoverMiddleY) &#123;</span><br><span class=\"line\">            positionRef.<span class=\"property\">current</span> = <span class=\"string\">&#x27;bottom&#x27;</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (draggedId !== id) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">131231</span>, )</span><br><span class=\"line\">        <span class=\"keyword\">const</span> &#123; <span class=\"attr\">index</span>: overIndex &#125; = <span class=\"title function_\">findCard</span>(id)</span><br><span class=\"line\">        <span class=\"title function_\">moveCard</span>(draggedId, overIndex)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">drop</span>:<span class=\"function\">(<span class=\"params\">item: cardBase, monitor</span>)=&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; <span class=\"attr\">id</span>: currentId &#125; = item</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(currentId) <span class=\"keyword\">return</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> &#123; <span class=\"attr\">index</span>: overIndex &#125; = <span class=\"title function_\">findCard</span>(id)</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(positionRef.<span class=\"property\">current</span> === <span class=\"string\">&#x27;bottom&#x27;</span>) overIndex += <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> newItem = &#123; ...item, <span class=\"attr\">id</span>: <span class=\"title function_\">uuidv4</span>() &#125;</span><br><span class=\"line\">      <span class=\"title function_\">insertCard</span>(overIndex, newItem)</span><br><span class=\"line\">      <span class=\"title function_\">setDragingfunc</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">      <span class=\"keyword\">const</span> formData = <span class=\"title function_\">createForm</span>(&#123;</span><br><span class=\"line\">        <span class=\"title function_\">effects</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">          <span class=\"title function_\">onFormValuesChange</span>(<span class=\"function\"><span class=\"params\">form</span>=&gt;</span>&#123;</span><br><span class=\"line\">            newItem.<span class=\"property\">data</span> = form.<span class=\"property\">values</span></span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"title function_\">dispatch</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>:<span class=\"string\">&quot;homeModel/setFormBox&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">payload</span>:&#123;</span><br><span class=\"line\">          <span class=\"attr\">visible</span>:<span class=\"literal\">true</span>,</span><br><span class=\"line\">          <span class=\"attr\">currentCard</span>:newItem,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">callback</span>:<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">          <span class=\"title function_\">toggleForm</span>(formData)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      positionRef.<span class=\"property\">current</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  [findCard, moveCard],</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"vscode保存格式化设置","_content":"\n```json\n{\n    \"explorer.confirmDelete\": false,\n    \"[javascriptreact]\": {\n        \"editor.defaultFormatter\": \"dbaeumer.vscode-eslint\"\n    },\n    \"git.suggestSmartCommit\": false,\n    \"diffEditor.ignoreTrimWhitespace\": false,\n    \"git.autofetch\": true,\n    \"editor.accessibilitySupport\": \"off\",\n    \"git.ignoreRebaseWarning\": true,\n    \"terminal.integrated.tabs.location\": \"left\",\n    \"terminal.integrated.tabs.enabled\": false,\n    \"editor.formatOnSave\": true,\n    \"editor.formatOnType\": true,\n    \"editor.codeActionsOnSave\": {\n        \"source.fixAll.eslint\": true,\n    },\n}\n```\n\n\n\n","source":"_posts/vscode/vscode-autosave.md","raw":"---\ncategories: vscode\ntags: vscode保存格式化设置\ntitle: vscode保存格式化设置\n---\n\n```json\n{\n    \"explorer.confirmDelete\": false,\n    \"[javascriptreact]\": {\n        \"editor.defaultFormatter\": \"dbaeumer.vscode-eslint\"\n    },\n    \"git.suggestSmartCommit\": false,\n    \"diffEditor.ignoreTrimWhitespace\": false,\n    \"git.autofetch\": true,\n    \"editor.accessibilitySupport\": \"off\",\n    \"git.ignoreRebaseWarning\": true,\n    \"terminal.integrated.tabs.location\": \"left\",\n    \"terminal.integrated.tabs.enabled\": false,\n    \"editor.formatOnSave\": true,\n    \"editor.formatOnType\": true,\n    \"editor.codeActionsOnSave\": {\n        \"source.fixAll.eslint\": true,\n    },\n}\n```\n\n\n\n","slug":"vscode/vscode-autosave","published":1,"date":"2023-02-02T06:56:53.490Z","updated":"2023-02-02T07:37:23.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpwezcll0008a1zi0bqq0k3a","content":"<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;explorer.confirmDelete&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;[javascriptreact]&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;editor.defaultFormatter&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;dbaeumer.vscode-eslint&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;git.suggestSmartCommit&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;diffEditor.ignoreTrimWhitespace&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;git.autofetch&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;editor.accessibilitySupport&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;off&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;git.ignoreRebaseWarning&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;terminal.integrated.tabs.location&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;left&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;terminal.integrated.tabs.enabled&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;editor.formatOnSave&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;editor.formatOnType&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;editor.codeActionsOnSave&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;source.fixAll.eslint&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;explorer.confirmDelete&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;[javascriptreact]&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;editor.defaultFormatter&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;dbaeumer.vscode-eslint&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;git.suggestSmartCommit&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;diffEditor.ignoreTrimWhitespace&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;git.autofetch&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;editor.accessibilitySupport&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;off&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;git.ignoreRebaseWarning&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;terminal.integrated.tabs.location&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;left&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;terminal.integrated.tabs.enabled&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;editor.formatOnSave&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;editor.formatOnType&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;editor.codeActionsOnSave&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;source.fixAll.eslint&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"vscode插件","_content":"\n###### 1、Chinese 转中文\n\n###### 2、Auto Rename Tag 修改时自动同步左右两侧标签\n\n###### 3、Auto Import 自动引入\n\n###### 4、Colorful Comments 有颜色的注释\n\n###### 5、Css Peek css选择 没怎么使用\n\n###### 6、ES7+ React/Redux/React-Native snippets 代码提示\n\n###### 7、Eslint\n\n###### 8、GitLens git提交记录\n\n###### 9、Image preview 引入的图片预览\n\n###### 10、JSON To Ts command + shift + p 输入插件名，通过复制json文件生成ts\n\n###### 11、Paste JSON as Code 同上\n\n###### 12、Live serve 启动服务\n\n###### 13、Path Intellisense 路径提醒\n\n###### 14、Regex Perviewer 正则提醒\n\n###### 15、Javascript and Typescript Nightly 代码提示\n\n###### 16、ToDo Tree 代码中的注释 //ToDo: 会单独提醒\n\n###### 17、Turbo Console Log 选中 ctrl + shift + l 生成console.log\n\n###### 18、Vetur、Vue3 snippets 代码提示\n\n","source":"_posts/vscode/vscode-plugin.md","raw":"---\ncategories: vscode\ntags: vscode插件\ntitle: vscode插件\n---\n\n###### 1、Chinese 转中文\n\n###### 2、Auto Rename Tag 修改时自动同步左右两侧标签\n\n###### 3、Auto Import 自动引入\n\n###### 4、Colorful Comments 有颜色的注释\n\n###### 5、Css Peek css选择 没怎么使用\n\n###### 6、ES7+ React/Redux/React-Native snippets 代码提示\n\n###### 7、Eslint\n\n###### 8、GitLens git提交记录\n\n###### 9、Image preview 引入的图片预览\n\n###### 10、JSON To Ts command + shift + p 输入插件名，通过复制json文件生成ts\n\n###### 11、Paste JSON as Code 同上\n\n###### 12、Live serve 启动服务\n\n###### 13、Path Intellisense 路径提醒\n\n###### 14、Regex Perviewer 正则提醒\n\n###### 15、Javascript and Typescript Nightly 代码提示\n\n###### 16、ToDo Tree 代码中的注释 //ToDo: 会单独提醒\n\n###### 17、Turbo Console Log 选中 ctrl + shift + l 生成console.log\n\n###### 18、Vetur、Vue3 snippets 代码提示\n\n","slug":"vscode/vscode-plugin","published":1,"date":"2023-02-02T06:55:27.514Z","updated":"2023-02-02T06:56:35.099Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpwezclp000ba1zi9g0y6651","content":"<h6 id=\"1、Chinese-转中文\"><a href=\"#1、Chinese-转中文\" class=\"headerlink\" title=\"1、Chinese 转中文\"></a>1、Chinese 转中文</h6><h6 id=\"2、Auto-Rename-Tag-修改时自动同步左右两侧标签\"><a href=\"#2、Auto-Rename-Tag-修改时自动同步左右两侧标签\" class=\"headerlink\" title=\"2、Auto Rename Tag 修改时自动同步左右两侧标签\"></a>2、Auto Rename Tag 修改时自动同步左右两侧标签</h6><h6 id=\"3、Auto-Import-自动引入\"><a href=\"#3、Auto-Import-自动引入\" class=\"headerlink\" title=\"3、Auto Import 自动引入\"></a>3、Auto Import 自动引入</h6><h6 id=\"4、Colorful-Comments-有颜色的注释\"><a href=\"#4、Colorful-Comments-有颜色的注释\" class=\"headerlink\" title=\"4、Colorful Comments 有颜色的注释\"></a>4、Colorful Comments 有颜色的注释</h6><h6 id=\"5、Css-Peek-css选择-没怎么使用\"><a href=\"#5、Css-Peek-css选择-没怎么使用\" class=\"headerlink\" title=\"5、Css Peek css选择 没怎么使用\"></a>5、Css Peek css选择 没怎么使用</h6><h6 id=\"6、ES7-React-Redux-React-Native-snippets-代码提示\"><a href=\"#6、ES7-React-Redux-React-Native-snippets-代码提示\" class=\"headerlink\" title=\"6、ES7+ React/Redux/React-Native snippets 代码提示\"></a>6、ES7+ React/Redux/React-Native snippets 代码提示</h6><h6 id=\"7、Eslint\"><a href=\"#7、Eslint\" class=\"headerlink\" title=\"7、Eslint\"></a>7、Eslint</h6><h6 id=\"8、GitLens-git提交记录\"><a href=\"#8、GitLens-git提交记录\" class=\"headerlink\" title=\"8、GitLens git提交记录\"></a>8、GitLens git提交记录</h6><h6 id=\"9、Image-preview-引入的图片预览\"><a href=\"#9、Image-preview-引入的图片预览\" class=\"headerlink\" title=\"9、Image preview 引入的图片预览\"></a>9、Image preview 引入的图片预览</h6><h6 id=\"10、JSON-To-Ts-command-shift-p-输入插件名，通过复制json文件生成ts\"><a href=\"#10、JSON-To-Ts-command-shift-p-输入插件名，通过复制json文件生成ts\" class=\"headerlink\" title=\"10、JSON To Ts command + shift + p 输入插件名，通过复制json文件生成ts\"></a>10、JSON To Ts command + shift + p 输入插件名，通过复制json文件生成ts</h6><h6 id=\"11、Paste-JSON-as-Code-同上\"><a href=\"#11、Paste-JSON-as-Code-同上\" class=\"headerlink\" title=\"11、Paste JSON as Code 同上\"></a>11、Paste JSON as Code 同上</h6><h6 id=\"12、Live-serve-启动服务\"><a href=\"#12、Live-serve-启动服务\" class=\"headerlink\" title=\"12、Live serve 启动服务\"></a>12、Live serve 启动服务</h6><h6 id=\"13、Path-Intellisense-路径提醒\"><a href=\"#13、Path-Intellisense-路径提醒\" class=\"headerlink\" title=\"13、Path Intellisense 路径提醒\"></a>13、Path Intellisense 路径提醒</h6><h6 id=\"14、Regex-Perviewer-正则提醒\"><a href=\"#14、Regex-Perviewer-正则提醒\" class=\"headerlink\" title=\"14、Regex Perviewer 正则提醒\"></a>14、Regex Perviewer 正则提醒</h6><h6 id=\"15、Javascript-and-Typescript-Nightly-代码提示\"><a href=\"#15、Javascript-and-Typescript-Nightly-代码提示\" class=\"headerlink\" title=\"15、Javascript and Typescript Nightly 代码提示\"></a>15、Javascript and Typescript Nightly 代码提示</h6><h6 id=\"16、ToDo-Tree-代码中的注释-ToDo-会单独提醒\"><a href=\"#16、ToDo-Tree-代码中的注释-ToDo-会单独提醒\" class=\"headerlink\" title=\"16、ToDo Tree 代码中的注释 //ToDo: 会单独提醒\"></a>16、ToDo Tree 代码中的注释 //ToDo: 会单独提醒</h6><h6 id=\"17、Turbo-Console-Log-选中-ctrl-shift-l-生成console-log\"><a href=\"#17、Turbo-Console-Log-选中-ctrl-shift-l-生成console-log\" class=\"headerlink\" title=\"17、Turbo Console Log 选中 ctrl + shift + l 生成console.log\"></a>17、Turbo Console Log 选中 ctrl + shift + l 生成console.log</h6><h6 id=\"18、Vetur、Vue3-snippets-代码提示\"><a href=\"#18、Vetur、Vue3-snippets-代码提示\" class=\"headerlink\" title=\"18、Vetur、Vue3 snippets 代码提示\"></a>18、Vetur、Vue3 snippets 代码提示</h6>","site":{"data":{}},"excerpt":"","more":"<h6 id=\"1、Chinese-转中文\"><a href=\"#1、Chinese-转中文\" class=\"headerlink\" title=\"1、Chinese 转中文\"></a>1、Chinese 转中文</h6><h6 id=\"2、Auto-Rename-Tag-修改时自动同步左右两侧标签\"><a href=\"#2、Auto-Rename-Tag-修改时自动同步左右两侧标签\" class=\"headerlink\" title=\"2、Auto Rename Tag 修改时自动同步左右两侧标签\"></a>2、Auto Rename Tag 修改时自动同步左右两侧标签</h6><h6 id=\"3、Auto-Import-自动引入\"><a href=\"#3、Auto-Import-自动引入\" class=\"headerlink\" title=\"3、Auto Import 自动引入\"></a>3、Auto Import 自动引入</h6><h6 id=\"4、Colorful-Comments-有颜色的注释\"><a href=\"#4、Colorful-Comments-有颜色的注释\" class=\"headerlink\" title=\"4、Colorful Comments 有颜色的注释\"></a>4、Colorful Comments 有颜色的注释</h6><h6 id=\"5、Css-Peek-css选择-没怎么使用\"><a href=\"#5、Css-Peek-css选择-没怎么使用\" class=\"headerlink\" title=\"5、Css Peek css选择 没怎么使用\"></a>5、Css Peek css选择 没怎么使用</h6><h6 id=\"6、ES7-React-Redux-React-Native-snippets-代码提示\"><a href=\"#6、ES7-React-Redux-React-Native-snippets-代码提示\" class=\"headerlink\" title=\"6、ES7+ React/Redux/React-Native snippets 代码提示\"></a>6、ES7+ React/Redux/React-Native snippets 代码提示</h6><h6 id=\"7、Eslint\"><a href=\"#7、Eslint\" class=\"headerlink\" title=\"7、Eslint\"></a>7、Eslint</h6><h6 id=\"8、GitLens-git提交记录\"><a href=\"#8、GitLens-git提交记录\" class=\"headerlink\" title=\"8、GitLens git提交记录\"></a>8、GitLens git提交记录</h6><h6 id=\"9、Image-preview-引入的图片预览\"><a href=\"#9、Image-preview-引入的图片预览\" class=\"headerlink\" title=\"9、Image preview 引入的图片预览\"></a>9、Image preview 引入的图片预览</h6><h6 id=\"10、JSON-To-Ts-command-shift-p-输入插件名，通过复制json文件生成ts\"><a href=\"#10、JSON-To-Ts-command-shift-p-输入插件名，通过复制json文件生成ts\" class=\"headerlink\" title=\"10、JSON To Ts command + shift + p 输入插件名，通过复制json文件生成ts\"></a>10、JSON To Ts command + shift + p 输入插件名，通过复制json文件生成ts</h6><h6 id=\"11、Paste-JSON-as-Code-同上\"><a href=\"#11、Paste-JSON-as-Code-同上\" class=\"headerlink\" title=\"11、Paste JSON as Code 同上\"></a>11、Paste JSON as Code 同上</h6><h6 id=\"12、Live-serve-启动服务\"><a href=\"#12、Live-serve-启动服务\" class=\"headerlink\" title=\"12、Live serve 启动服务\"></a>12、Live serve 启动服务</h6><h6 id=\"13、Path-Intellisense-路径提醒\"><a href=\"#13、Path-Intellisense-路径提醒\" class=\"headerlink\" title=\"13、Path Intellisense 路径提醒\"></a>13、Path Intellisense 路径提醒</h6><h6 id=\"14、Regex-Perviewer-正则提醒\"><a href=\"#14、Regex-Perviewer-正则提醒\" class=\"headerlink\" title=\"14、Regex Perviewer 正则提醒\"></a>14、Regex Perviewer 正则提醒</h6><h6 id=\"15、Javascript-and-Typescript-Nightly-代码提示\"><a href=\"#15、Javascript-and-Typescript-Nightly-代码提示\" class=\"headerlink\" title=\"15、Javascript and Typescript Nightly 代码提示\"></a>15、Javascript and Typescript Nightly 代码提示</h6><h6 id=\"16、ToDo-Tree-代码中的注释-ToDo-会单独提醒\"><a href=\"#16、ToDo-Tree-代码中的注释-ToDo-会单独提醒\" class=\"headerlink\" title=\"16、ToDo Tree 代码中的注释 //ToDo: 会单独提醒\"></a>16、ToDo Tree 代码中的注释 //ToDo: 会单独提醒</h6><h6 id=\"17、Turbo-Console-Log-选中-ctrl-shift-l-生成console-log\"><a href=\"#17、Turbo-Console-Log-选中-ctrl-shift-l-生成console-log\" class=\"headerlink\" title=\"17、Turbo Console Log 选中 ctrl + shift + l 生成console.log\"></a>17、Turbo Console Log 选中 ctrl + shift + l 生成console.log</h6><h6 id=\"18、Vetur、Vue3-snippets-代码提示\"><a href=\"#18、Vetur、Vue3-snippets-代码提示\" class=\"headerlink\" title=\"18、Vetur、Vue3 snippets 代码提示\"></a>18、Vetur、Vue3 snippets 代码提示</h6>"},{"title":"websocket聊天室","_content":"\n# socket.io\n\n官网地址：<https://socket.io/docs/v4/>\n\n# 1、服务器端\n\n### 1.1、安装\n\nsocket.io v4.x版本 至少需要 Nodev10\n\n### 1.2、下载\n\n```javascript\nnpm install socket.io\n```\n\n### 1.3、使用\n\n##### 1.3.1、启动端口\n\n这里使用的是express\n\n```javascript\nvar express = require('express');//引用express\nvar app = express();//创建express实例\n\nvar server = app.listen(9999, function () {//应用启动端口为9999\n  var host = server.address().address;\n  var port = server.address().port;\n  console.log(\"访问地址为\", host, port)\n});\n\nconst socketIo = require('socket.io')(server, { cors: true });\n\n```\n\n##### 1.3.2、socketIo监听\n```javascript\n    let users = []\n    //监听connection（用户连接）事件，socket为用户连接的实例\n    socketIo.on('connection',(socket)=>{\n      socket.on('disconnect',()=>{\n        console.log(\"用户\"+socket.id+\"断开连接\");\n      });\n      \n      // 监听客户端连接事件\n      socket.on('client_online', data => {\n        const { nickName, id } = data\n        const userInfo = {\n          nickName,\n          socketId:socket.id,\n          id\n        }\n        users.push(userInfo)\n        socketIo.emit('server_online',users);\n     })\n     \n     socket.on('client_msg',(data)=>{\n        //监听msg事件（这个是自定义的事件）\n        // type 1代表左侧消息，2代表右侧消息\n        const { msg, nickName, roomId, userId } = data\n        const params = {\n          msg,\n          nickName,\n          times:moment(new Date().getTime()).format('YYYY-MM-DD HH:mm:ss'),\n          userId,\n        }\n        \n        const leftMessage = { ...params, type:1 }\n        const rightMessage = { ...params, type:2 }\n        \n        // 向其他所有人发送消息\n        socket.broadcast.emit('server_msg',leftObj);\n        // 向当前发送者返回消息\n        socket.emit('server_msg',rightObj);\n      })\n    })\n```\nsocket.id自动生成，每次连接都是新的id，这里通过监听client\\_online事件，收集客户端传入的数据data,\n通过client\\_message\n```\n  data:{ \n    id:number;\n    nickName:string;\n  }\n```\n\n# 2、客户端\n\n### 2.1、安装\n\nsocket.io v4.x版本 至少需要 Nodev10\n\n### 2.2、下载\n\nnpm install socket.io-client\n\n### 2.3、使用\n\n```javascript\nimport io from 'socket.io-client'\nconst socket = io('ws://localhost:9999')\n\nsocket.emit('client_online', {\n  nickName,\n  id:userId,\n})\n\n```\n\n通过client\\_online自定义事件，向服务端传输当前用户信息，服务端保存当前连接数量及用户\n```javascript\n  socket.emit('client_msg', { \n    msg,\n    nickName,\n    userId\n  })\n```\n通过client\\_msg自定义事件，向服务端发送聊天信息\n```javascript\n  socket.on('server_msg', (data) => {\n    const { chatMsg } = this.state\n    \n    const newChatMsg = chatMsg.concat(data)\n    this.setState({\n      chatMsg:newChatMsg\n    })\n  });\n```\n通过监听server\\_msg，获取服务端返回的消息，并保存\n","source":"_posts/websocket/websocket-chatroom.md","raw":"---\ncategories: websocket\ntags: websocket聊天室\ntitle: websocket聊天室\n---\n\n# socket.io\n\n官网地址：<https://socket.io/docs/v4/>\n\n# 1、服务器端\n\n### 1.1、安装\n\nsocket.io v4.x版本 至少需要 Nodev10\n\n### 1.2、下载\n\n```javascript\nnpm install socket.io\n```\n\n### 1.3、使用\n\n##### 1.3.1、启动端口\n\n这里使用的是express\n\n```javascript\nvar express = require('express');//引用express\nvar app = express();//创建express实例\n\nvar server = app.listen(9999, function () {//应用启动端口为9999\n  var host = server.address().address;\n  var port = server.address().port;\n  console.log(\"访问地址为\", host, port)\n});\n\nconst socketIo = require('socket.io')(server, { cors: true });\n\n```\n\n##### 1.3.2、socketIo监听\n```javascript\n    let users = []\n    //监听connection（用户连接）事件，socket为用户连接的实例\n    socketIo.on('connection',(socket)=>{\n      socket.on('disconnect',()=>{\n        console.log(\"用户\"+socket.id+\"断开连接\");\n      });\n      \n      // 监听客户端连接事件\n      socket.on('client_online', data => {\n        const { nickName, id } = data\n        const userInfo = {\n          nickName,\n          socketId:socket.id,\n          id\n        }\n        users.push(userInfo)\n        socketIo.emit('server_online',users);\n     })\n     \n     socket.on('client_msg',(data)=>{\n        //监听msg事件（这个是自定义的事件）\n        // type 1代表左侧消息，2代表右侧消息\n        const { msg, nickName, roomId, userId } = data\n        const params = {\n          msg,\n          nickName,\n          times:moment(new Date().getTime()).format('YYYY-MM-DD HH:mm:ss'),\n          userId,\n        }\n        \n        const leftMessage = { ...params, type:1 }\n        const rightMessage = { ...params, type:2 }\n        \n        // 向其他所有人发送消息\n        socket.broadcast.emit('server_msg',leftObj);\n        // 向当前发送者返回消息\n        socket.emit('server_msg',rightObj);\n      })\n    })\n```\nsocket.id自动生成，每次连接都是新的id，这里通过监听client\\_online事件，收集客户端传入的数据data,\n通过client\\_message\n```\n  data:{ \n    id:number;\n    nickName:string;\n  }\n```\n\n# 2、客户端\n\n### 2.1、安装\n\nsocket.io v4.x版本 至少需要 Nodev10\n\n### 2.2、下载\n\nnpm install socket.io-client\n\n### 2.3、使用\n\n```javascript\nimport io from 'socket.io-client'\nconst socket = io('ws://localhost:9999')\n\nsocket.emit('client_online', {\n  nickName,\n  id:userId,\n})\n\n```\n\n通过client\\_online自定义事件，向服务端传输当前用户信息，服务端保存当前连接数量及用户\n```javascript\n  socket.emit('client_msg', { \n    msg,\n    nickName,\n    userId\n  })\n```\n通过client\\_msg自定义事件，向服务端发送聊天信息\n```javascript\n  socket.on('server_msg', (data) => {\n    const { chatMsg } = this.state\n    \n    const newChatMsg = chatMsg.concat(data)\n    this.setState({\n      chatMsg:newChatMsg\n    })\n  });\n```\n通过监听server\\_msg，获取服务端返回的消息，并保存\n","slug":"websocket/websocket-chatroom","published":1,"date":"2023-02-02T07:03:10.351Z","updated":"2023-02-02T07:37:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpwezclr000ea1zi4g9sgpda","content":"<h1 id=\"socket-io\"><a href=\"#socket-io\" class=\"headerlink\" title=\"socket.io\"></a>socket.io</h1><p>官网地址：<a href=\"https://socket.io/docs/v4/\">https://socket.io/docs/v4/</a></p>\n<h1 id=\"1、服务器端\"><a href=\"#1、服务器端\" class=\"headerlink\" title=\"1、服务器端\"></a>1、服务器端</h1><h3 id=\"1-1、安装\"><a href=\"#1-1、安装\" class=\"headerlink\" title=\"1.1、安装\"></a>1.1、安装</h3><p>socket.io v4.x版本 至少需要 Nodev10</p>\n<h3 id=\"1-2、下载\"><a href=\"#1-2、下载\" class=\"headerlink\" title=\"1.2、下载\"></a>1.2、下载</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install socket.<span class=\"property\">io</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-3、使用\"><a href=\"#1-3、使用\" class=\"headerlink\" title=\"1.3、使用\"></a>1.3、使用</h3><h5 id=\"1-3-1、启动端口\"><a href=\"#1-3-1、启动端口\" class=\"headerlink\" title=\"1.3.1、启动端口\"></a>1.3.1、启动端口</h5><p>这里使用的是express</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);<span class=\"comment\">//引用express</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"title function_\">express</span>();<span class=\"comment\">//创建express实例</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> server = app.<span class=\"title function_\">listen</span>(<span class=\"number\">9999</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;<span class=\"comment\">//应用启动端口为9999</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> host = server.<span class=\"title function_\">address</span>().<span class=\"property\">address</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> port = server.<span class=\"title function_\">address</span>().<span class=\"property\">port</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;访问地址为&quot;</span>, host, port)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> socketIo = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;socket.io&#x27;</span>)(server, &#123; <span class=\"attr\">cors</span>: <span class=\"literal\">true</span> &#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-2、socketIo监听\"><a href=\"#1-3-2、socketIo监听\" class=\"headerlink\" title=\"1.3.2、socketIo监听\"></a>1.3.2、socketIo监听</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> users = []</span><br><span class=\"line\"><span class=\"comment\">//监听connection（用户连接）事件，socket为用户连接的实例</span></span><br><span class=\"line\">socketIo.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;connection&#x27;</span>,<span class=\"function\">(<span class=\"params\">socket</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;disconnect&#x27;</span>,<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;用户&quot;</span>+socket.<span class=\"property\">id</span>+<span class=\"string\">&quot;断开连接&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 监听客户端连接事件</span></span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;client_online&#x27;</span>, <span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; nickName, id &#125; = data</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userInfo = &#123;</span><br><span class=\"line\">      nickName,</span><br><span class=\"line\">      <span class=\"attr\">socketId</span>:socket.<span class=\"property\">id</span>,</span><br><span class=\"line\">      id</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    users.<span class=\"title function_\">push</span>(userInfo)</span><br><span class=\"line\">    socketIo.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;server_online&#x27;</span>,users);</span><br><span class=\"line\"> &#125;)</span><br><span class=\"line\"> </span><br><span class=\"line\"> socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;client_msg&#x27;</span>,<span class=\"function\">(<span class=\"params\">data</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//监听msg事件（这个是自定义的事件）</span></span><br><span class=\"line\">    <span class=\"comment\">// type 1代表左侧消息，2代表右侧消息</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; msg, nickName, roomId, userId &#125; = data</span><br><span class=\"line\">    <span class=\"keyword\">const</span> params = &#123;</span><br><span class=\"line\">      msg,</span><br><span class=\"line\">      nickName,</span><br><span class=\"line\">      <span class=\"attr\">times</span>:<span class=\"title function_\">moment</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>()).<span class=\"title function_\">format</span>(<span class=\"string\">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>),</span><br><span class=\"line\">      userId,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> leftMessage = &#123; ...params, <span class=\"attr\">type</span>:<span class=\"number\">1</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rightMessage = &#123; ...params, <span class=\"attr\">type</span>:<span class=\"number\">2</span> &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 向其他所有人发送消息</span></span><br><span class=\"line\">    socket.<span class=\"property\">broadcast</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;server_msg&#x27;</span>,leftObj);</span><br><span class=\"line\">    <span class=\"comment\">// 向当前发送者返回消息</span></span><br><span class=\"line\">    socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;server_msg&#x27;</span>,rightObj);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>socket.id自动生成，每次连接都是新的id，这里通过监听client_online事件，收集客户端传入的数据data,<br>通过client_message</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data:&#123; </span><br><span class=\"line\">  id:number;</span><br><span class=\"line\">  nickName:string;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2、客户端\"><a href=\"#2、客户端\" class=\"headerlink\" title=\"2、客户端\"></a>2、客户端</h1><h3 id=\"2-1、安装\"><a href=\"#2-1、安装\" class=\"headerlink\" title=\"2.1、安装\"></a>2.1、安装</h3><p>socket.io v4.x版本 至少需要 Nodev10</p>\n<h3 id=\"2-2、下载\"><a href=\"#2-2、下载\" class=\"headerlink\" title=\"2.2、下载\"></a>2.2、下载</h3><p>npm install socket.io-client</p>\n<h3 id=\"2-3、使用\"><a href=\"#2-3、使用\" class=\"headerlink\" title=\"2.3、使用\"></a>2.3、使用</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> io <span class=\"keyword\">from</span> <span class=\"string\">&#x27;socket.io-client&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> socket = <span class=\"title function_\">io</span>(<span class=\"string\">&#x27;ws://localhost:9999&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;client_online&#x27;</span>, &#123;</span><br><span class=\"line\">  nickName,</span><br><span class=\"line\">  <span class=\"attr\">id</span>:userId,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>通过client_online自定义事件，向服务端传输当前用户信息，服务端保存当前连接数量及用户</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;client_msg&#x27;</span>, &#123; </span><br><span class=\"line\">  msg,</span><br><span class=\"line\">  nickName,</span><br><span class=\"line\">  userId</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>通过client_msg自定义事件，向服务端发送聊天信息</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;server_msg&#x27;</span>, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; chatMsg &#125; = <span class=\"variable language_\">this</span>.<span class=\"property\">state</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">const</span> newChatMsg = chatMsg.<span class=\"title function_\">concat</span>(data)</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">chatMsg</span>:newChatMsg</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>通过监听server_msg，获取服务端返回的消息，并保存</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"socket-io\"><a href=\"#socket-io\" class=\"headerlink\" title=\"socket.io\"></a>socket.io</h1><p>官网地址：<a href=\"https://socket.io/docs/v4/\">https://socket.io/docs/v4/</a></p>\n<h1 id=\"1、服务器端\"><a href=\"#1、服务器端\" class=\"headerlink\" title=\"1、服务器端\"></a>1、服务器端</h1><h3 id=\"1-1、安装\"><a href=\"#1-1、安装\" class=\"headerlink\" title=\"1.1、安装\"></a>1.1、安装</h3><p>socket.io v4.x版本 至少需要 Nodev10</p>\n<h3 id=\"1-2、下载\"><a href=\"#1-2、下载\" class=\"headerlink\" title=\"1.2、下载\"></a>1.2、下载</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install socket.<span class=\"property\">io</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-3、使用\"><a href=\"#1-3、使用\" class=\"headerlink\" title=\"1.3、使用\"></a>1.3、使用</h3><h5 id=\"1-3-1、启动端口\"><a href=\"#1-3-1、启动端口\" class=\"headerlink\" title=\"1.3.1、启动端口\"></a>1.3.1、启动端口</h5><p>这里使用的是express</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);<span class=\"comment\">//引用express</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"title function_\">express</span>();<span class=\"comment\">//创建express实例</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> server = app.<span class=\"title function_\">listen</span>(<span class=\"number\">9999</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;<span class=\"comment\">//应用启动端口为9999</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> host = server.<span class=\"title function_\">address</span>().<span class=\"property\">address</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> port = server.<span class=\"title function_\">address</span>().<span class=\"property\">port</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;访问地址为&quot;</span>, host, port)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> socketIo = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;socket.io&#x27;</span>)(server, &#123; <span class=\"attr\">cors</span>: <span class=\"literal\">true</span> &#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-2、socketIo监听\"><a href=\"#1-3-2、socketIo监听\" class=\"headerlink\" title=\"1.3.2、socketIo监听\"></a>1.3.2、socketIo监听</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> users = []</span><br><span class=\"line\"><span class=\"comment\">//监听connection（用户连接）事件，socket为用户连接的实例</span></span><br><span class=\"line\">socketIo.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;connection&#x27;</span>,<span class=\"function\">(<span class=\"params\">socket</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;disconnect&#x27;</span>,<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;用户&quot;</span>+socket.<span class=\"property\">id</span>+<span class=\"string\">&quot;断开连接&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 监听客户端连接事件</span></span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;client_online&#x27;</span>, <span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; nickName, id &#125; = data</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userInfo = &#123;</span><br><span class=\"line\">      nickName,</span><br><span class=\"line\">      <span class=\"attr\">socketId</span>:socket.<span class=\"property\">id</span>,</span><br><span class=\"line\">      id</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    users.<span class=\"title function_\">push</span>(userInfo)</span><br><span class=\"line\">    socketIo.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;server_online&#x27;</span>,users);</span><br><span class=\"line\"> &#125;)</span><br><span class=\"line\"> </span><br><span class=\"line\"> socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;client_msg&#x27;</span>,<span class=\"function\">(<span class=\"params\">data</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//监听msg事件（这个是自定义的事件）</span></span><br><span class=\"line\">    <span class=\"comment\">// type 1代表左侧消息，2代表右侧消息</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; msg, nickName, roomId, userId &#125; = data</span><br><span class=\"line\">    <span class=\"keyword\">const</span> params = &#123;</span><br><span class=\"line\">      msg,</span><br><span class=\"line\">      nickName,</span><br><span class=\"line\">      <span class=\"attr\">times</span>:<span class=\"title function_\">moment</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>()).<span class=\"title function_\">format</span>(<span class=\"string\">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>),</span><br><span class=\"line\">      userId,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> leftMessage = &#123; ...params, <span class=\"attr\">type</span>:<span class=\"number\">1</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rightMessage = &#123; ...params, <span class=\"attr\">type</span>:<span class=\"number\">2</span> &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 向其他所有人发送消息</span></span><br><span class=\"line\">    socket.<span class=\"property\">broadcast</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;server_msg&#x27;</span>,leftObj);</span><br><span class=\"line\">    <span class=\"comment\">// 向当前发送者返回消息</span></span><br><span class=\"line\">    socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;server_msg&#x27;</span>,rightObj);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>socket.id自动生成，每次连接都是新的id，这里通过监听client_online事件，收集客户端传入的数据data,<br>通过client_message</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data:&#123; </span><br><span class=\"line\">  id:number;</span><br><span class=\"line\">  nickName:string;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2、客户端\"><a href=\"#2、客户端\" class=\"headerlink\" title=\"2、客户端\"></a>2、客户端</h1><h3 id=\"2-1、安装\"><a href=\"#2-1、安装\" class=\"headerlink\" title=\"2.1、安装\"></a>2.1、安装</h3><p>socket.io v4.x版本 至少需要 Nodev10</p>\n<h3 id=\"2-2、下载\"><a href=\"#2-2、下载\" class=\"headerlink\" title=\"2.2、下载\"></a>2.2、下载</h3><p>npm install socket.io-client</p>\n<h3 id=\"2-3、使用\"><a href=\"#2-3、使用\" class=\"headerlink\" title=\"2.3、使用\"></a>2.3、使用</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> io <span class=\"keyword\">from</span> <span class=\"string\">&#x27;socket.io-client&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> socket = <span class=\"title function_\">io</span>(<span class=\"string\">&#x27;ws://localhost:9999&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;client_online&#x27;</span>, &#123;</span><br><span class=\"line\">  nickName,</span><br><span class=\"line\">  <span class=\"attr\">id</span>:userId,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>通过client_online自定义事件，向服务端传输当前用户信息，服务端保存当前连接数量及用户</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;client_msg&#x27;</span>, &#123; </span><br><span class=\"line\">  msg,</span><br><span class=\"line\">  nickName,</span><br><span class=\"line\">  userId</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>通过client_msg自定义事件，向服务端发送聊天信息</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;server_msg&#x27;</span>, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; chatMsg &#125; = <span class=\"variable language_\">this</span>.<span class=\"property\">state</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">const</span> newChatMsg = chatMsg.<span class=\"title function_\">concat</span>(data)</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">chatMsg</span>:newChatMsg</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>通过监听server_msg，获取服务端返回的消息，并保存</p>\n"},{"title":"websocket群聊","_content":"\n# socket.io\n\n官网地址：<https://socket.io/docs/v4/>\n\n# 1、服务器端\n\n### 1.1、安装\n\nsocket.io v4.x版本 至少需要 Nodev10\n\n### 1.2、下载\n\n```javascript\nnpm install socket.io\n```\n\n### 1.3、使用\n\n##### 1.3.1、启动端口\n\n这里使用的是express\n\n```javascript\nvar express = require('express');//引用express\nvar app = express();//创建express实例\n\nvar server = app.listen(9999, function () {//应用启动端口为9999\n  var host = server.address().address;\n  var port = server.address().port;\n  console.log(\"访问地址为\", host, port)\n});\n\nconst socketIo = require('socket.io')(server, { cors: true });\n\n```\n\n##### 1.3.2、socketIo监听\n\n```javascript\nlet groupUser = []\n//监听connection（用户连接）事件，socket为用户连接的实例\nsocketIo.on('connection',(socket)=>{\n  socket.on('disconnect',()=>{\n    Object.keys(groupUser).forEach(item=>{\n      groupUser[item] = groupUser[item].filter(ele=>ele.socketId !== socket.id)\n    })\n    console.log(\"用户\"+socket.id+\"断开连接\");\n  });\n  \n  // 监听客户端加入群聊连接事件\n  socket.on('joinRoom', data=>{\n    const { nickName, id, roomId } = data\n    socket.join(roomId)\n    if(!groupUser[roomId]) groupUser[roomId] = []\n    groupUser[roomId].push({\n      nickName,\n      socketId:socket.id,\n      id\n    })\n    socket.emit('roomUser', groupUser)\n    socket.broadcast.emit('roomUser', groupUser)\n  })\n \n socket.on('client_msg',(data)=>{\n    //监听msg事件（这个是自定义的事件）\n    // type 1代表左侧消息，2代表右侧消息\n    const { msg, nickName, roomId, userId } = data\n    const params = {\n      msg,\n      nickName,\n      roomId,\n      times:moment(new Date().getTime()).format('YYYY-MM-DD HH:mm:ss'),\n      userId,\n    }\n    \n    const leftMessage = { ...params, type:1 }\n    const rightMessage = { ...params, type:2 }\n    \n    // 向该房间其他人发送消息\n    socket.in([data.roomId]).emit('server_msg', leftMessage);\n    // 向当前发送者返回消息\n    socket.emit('server_msg',rightMessage);\n  })\n})\n```\n\nsocket.id自动生成，每次连接都是新的id，这里通过监听client\\_online事件，收集客户端传入的数据data,\n通过client\\_message\n\n# 2、客户端\n\n### 2.1、安装\n\nsocket.io v4.x版本 至少需要 Nodev10\n\n### 2.2、下载\n\n```javascript\nnpm install socket.io-client\n```\n\n### 2.3、使用\n\n```javascript\nimport io from 'socket.io-client'\nconst socket = io('ws://localhost:9999')\n\n// 根据当前用户的group，加入不同聊天群组\nconst group = [\n    { name:\"聊天群1\", value:1 },\n    { name:\"聊天群2\", value:2 },\n]\n// userId 为当前用户id， nickName:昵称\ngroup.forEach(item => {\n  socket.emit('joinRoom', {\n    nickName,\n    id:userId,\n    roomId:`room${ item.value }`,\n  })\n})\n\n\n```\n\n通过joinRoom自定义事件，加入不同得房间。\n\n```javascript\nsocket.emit('client_msg', { \n  msg,\n  nickName,\n  roomId: `room${ currentChat.roomId }`,\n  userId\n})\n```\n\n通过client\\_msg自定义事件，向服务端发送聊天信息,发送消息需要传当前的roomId,服务端根据当前roomId,群发消息到对应群内\n\n```javascript\nconst msgArr = new Map()\nsocket.on('server_msg', (data) => {\n  const { roomId } = data\n  if(!msgArr.get(roomId)) msgArr.set(roomId, [])\n  const roomData = msgArr.get(roomId).concat(data)\n  msgArr.set(roomId, roomData)\n});\n```\n\n通过监听server\\_msg，获取服务端返回的消息，并保存\n\n","source":"_posts/websocket/websocket-single.md","raw":"---\ncategories: websocket\ntags: websocket群聊\ntitle: websocket群聊\n---\n\n# socket.io\n\n官网地址：<https://socket.io/docs/v4/>\n\n# 1、服务器端\n\n### 1.1、安装\n\nsocket.io v4.x版本 至少需要 Nodev10\n\n### 1.2、下载\n\n```javascript\nnpm install socket.io\n```\n\n### 1.3、使用\n\n##### 1.3.1、启动端口\n\n这里使用的是express\n\n```javascript\nvar express = require('express');//引用express\nvar app = express();//创建express实例\n\nvar server = app.listen(9999, function () {//应用启动端口为9999\n  var host = server.address().address;\n  var port = server.address().port;\n  console.log(\"访问地址为\", host, port)\n});\n\nconst socketIo = require('socket.io')(server, { cors: true });\n\n```\n\n##### 1.3.2、socketIo监听\n\n```javascript\nlet groupUser = []\n//监听connection（用户连接）事件，socket为用户连接的实例\nsocketIo.on('connection',(socket)=>{\n  socket.on('disconnect',()=>{\n    Object.keys(groupUser).forEach(item=>{\n      groupUser[item] = groupUser[item].filter(ele=>ele.socketId !== socket.id)\n    })\n    console.log(\"用户\"+socket.id+\"断开连接\");\n  });\n  \n  // 监听客户端加入群聊连接事件\n  socket.on('joinRoom', data=>{\n    const { nickName, id, roomId } = data\n    socket.join(roomId)\n    if(!groupUser[roomId]) groupUser[roomId] = []\n    groupUser[roomId].push({\n      nickName,\n      socketId:socket.id,\n      id\n    })\n    socket.emit('roomUser', groupUser)\n    socket.broadcast.emit('roomUser', groupUser)\n  })\n \n socket.on('client_msg',(data)=>{\n    //监听msg事件（这个是自定义的事件）\n    // type 1代表左侧消息，2代表右侧消息\n    const { msg, nickName, roomId, userId } = data\n    const params = {\n      msg,\n      nickName,\n      roomId,\n      times:moment(new Date().getTime()).format('YYYY-MM-DD HH:mm:ss'),\n      userId,\n    }\n    \n    const leftMessage = { ...params, type:1 }\n    const rightMessage = { ...params, type:2 }\n    \n    // 向该房间其他人发送消息\n    socket.in([data.roomId]).emit('server_msg', leftMessage);\n    // 向当前发送者返回消息\n    socket.emit('server_msg',rightMessage);\n  })\n})\n```\n\nsocket.id自动生成，每次连接都是新的id，这里通过监听client\\_online事件，收集客户端传入的数据data,\n通过client\\_message\n\n# 2、客户端\n\n### 2.1、安装\n\nsocket.io v4.x版本 至少需要 Nodev10\n\n### 2.2、下载\n\n```javascript\nnpm install socket.io-client\n```\n\n### 2.3、使用\n\n```javascript\nimport io from 'socket.io-client'\nconst socket = io('ws://localhost:9999')\n\n// 根据当前用户的group，加入不同聊天群组\nconst group = [\n    { name:\"聊天群1\", value:1 },\n    { name:\"聊天群2\", value:2 },\n]\n// userId 为当前用户id， nickName:昵称\ngroup.forEach(item => {\n  socket.emit('joinRoom', {\n    nickName,\n    id:userId,\n    roomId:`room${ item.value }`,\n  })\n})\n\n\n```\n\n通过joinRoom自定义事件，加入不同得房间。\n\n```javascript\nsocket.emit('client_msg', { \n  msg,\n  nickName,\n  roomId: `room${ currentChat.roomId }`,\n  userId\n})\n```\n\n通过client\\_msg自定义事件，向服务端发送聊天信息,发送消息需要传当前的roomId,服务端根据当前roomId,群发消息到对应群内\n\n```javascript\nconst msgArr = new Map()\nsocket.on('server_msg', (data) => {\n  const { roomId } = data\n  if(!msgArr.get(roomId)) msgArr.set(roomId, [])\n  const roomData = msgArr.get(roomId).concat(data)\n  msgArr.set(roomId, roomData)\n});\n```\n\n通过监听server\\_msg，获取服务端返回的消息，并保存\n\n","slug":"websocket/websocket-single","published":1,"date":"2023-02-02T07:01:58.405Z","updated":"2023-02-02T07:37:40.484Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpwezcly000la1zib1al6ov1","content":"<h1 id=\"socket-io\"><a href=\"#socket-io\" class=\"headerlink\" title=\"socket.io\"></a>socket.io</h1><p>官网地址：<a href=\"https://socket.io/docs/v4/\">https://socket.io/docs/v4/</a></p>\n<h1 id=\"1、服务器端\"><a href=\"#1、服务器端\" class=\"headerlink\" title=\"1、服务器端\"></a>1、服务器端</h1><h3 id=\"1-1、安装\"><a href=\"#1-1、安装\" class=\"headerlink\" title=\"1.1、安装\"></a>1.1、安装</h3><p>socket.io v4.x版本 至少需要 Nodev10</p>\n<h3 id=\"1-2、下载\"><a href=\"#1-2、下载\" class=\"headerlink\" title=\"1.2、下载\"></a>1.2、下载</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install socket.<span class=\"property\">io</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-3、使用\"><a href=\"#1-3、使用\" class=\"headerlink\" title=\"1.3、使用\"></a>1.3、使用</h3><h5 id=\"1-3-1、启动端口\"><a href=\"#1-3-1、启动端口\" class=\"headerlink\" title=\"1.3.1、启动端口\"></a>1.3.1、启动端口</h5><p>这里使用的是express</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);<span class=\"comment\">//引用express</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"title function_\">express</span>();<span class=\"comment\">//创建express实例</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> server = app.<span class=\"title function_\">listen</span>(<span class=\"number\">9999</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;<span class=\"comment\">//应用启动端口为9999</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> host = server.<span class=\"title function_\">address</span>().<span class=\"property\">address</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> port = server.<span class=\"title function_\">address</span>().<span class=\"property\">port</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;访问地址为&quot;</span>, host, port)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> socketIo = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;socket.io&#x27;</span>)(server, &#123; <span class=\"attr\">cors</span>: <span class=\"literal\">true</span> &#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-2、socketIo监听\"><a href=\"#1-3-2、socketIo监听\" class=\"headerlink\" title=\"1.3.2、socketIo监听\"></a>1.3.2、socketIo监听</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> groupUser = []</span><br><span class=\"line\"><span class=\"comment\">//监听connection（用户连接）事件，socket为用户连接的实例</span></span><br><span class=\"line\">socketIo.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;connection&#x27;</span>,<span class=\"function\">(<span class=\"params\">socket</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;disconnect&#x27;</span>,<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(groupUser).<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>&#123;</span><br><span class=\"line\">      groupUser[item] = groupUser[item].<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">ele</span>=&gt;</span>ele.<span class=\"property\">socketId</span> !== socket.<span class=\"property\">id</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;用户&quot;</span>+socket.<span class=\"property\">id</span>+<span class=\"string\">&quot;断开连接&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 监听客户端加入群聊连接事件</span></span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;joinRoom&#x27;</span>, <span class=\"function\"><span class=\"params\">data</span>=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; nickName, id, roomId &#125; = data</span><br><span class=\"line\">    socket.<span class=\"title function_\">join</span>(roomId)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!groupUser[roomId]) groupUser[roomId] = []</span><br><span class=\"line\">    groupUser[roomId].<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">      nickName,</span><br><span class=\"line\">      <span class=\"attr\">socketId</span>:socket.<span class=\"property\">id</span>,</span><br><span class=\"line\">      id</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;roomUser&#x27;</span>, groupUser)</span><br><span class=\"line\">    socket.<span class=\"property\">broadcast</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;roomUser&#x27;</span>, groupUser)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"> </span><br><span class=\"line\"> socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;client_msg&#x27;</span>,<span class=\"function\">(<span class=\"params\">data</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//监听msg事件（这个是自定义的事件）</span></span><br><span class=\"line\">    <span class=\"comment\">// type 1代表左侧消息，2代表右侧消息</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; msg, nickName, roomId, userId &#125; = data</span><br><span class=\"line\">    <span class=\"keyword\">const</span> params = &#123;</span><br><span class=\"line\">      msg,</span><br><span class=\"line\">      nickName,</span><br><span class=\"line\">      roomId,</span><br><span class=\"line\">      <span class=\"attr\">times</span>:<span class=\"title function_\">moment</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>()).<span class=\"title function_\">format</span>(<span class=\"string\">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>),</span><br><span class=\"line\">      userId,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> leftMessage = &#123; ...params, <span class=\"attr\">type</span>:<span class=\"number\">1</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rightMessage = &#123; ...params, <span class=\"attr\">type</span>:<span class=\"number\">2</span> &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 向该房间其他人发送消息</span></span><br><span class=\"line\">    socket.<span class=\"title function_\">in</span>([data.<span class=\"property\">roomId</span>]).<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;server_msg&#x27;</span>, leftMessage);</span><br><span class=\"line\">    <span class=\"comment\">// 向当前发送者返回消息</span></span><br><span class=\"line\">    socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;server_msg&#x27;</span>,rightMessage);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>socket.id自动生成，每次连接都是新的id，这里通过监听client_online事件，收集客户端传入的数据data,<br>通过client_message</p>\n<h1 id=\"2、客户端\"><a href=\"#2、客户端\" class=\"headerlink\" title=\"2、客户端\"></a>2、客户端</h1><h3 id=\"2-1、安装\"><a href=\"#2-1、安装\" class=\"headerlink\" title=\"2.1、安装\"></a>2.1、安装</h3><p>socket.io v4.x版本 至少需要 Nodev10</p>\n<h3 id=\"2-2、下载\"><a href=\"#2-2、下载\" class=\"headerlink\" title=\"2.2、下载\"></a>2.2、下载</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install socket.<span class=\"property\">io</span>-client</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3、使用\"><a href=\"#2-3、使用\" class=\"headerlink\" title=\"2.3、使用\"></a>2.3、使用</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> io <span class=\"keyword\">from</span> <span class=\"string\">&#x27;socket.io-client&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> socket = <span class=\"title function_\">io</span>(<span class=\"string\">&#x27;ws://localhost:9999&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 根据当前用户的group，加入不同聊天群组</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> group = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>:<span class=\"string\">&quot;聊天群1&quot;</span>, <span class=\"attr\">value</span>:<span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>:<span class=\"string\">&quot;聊天群2&quot;</span>, <span class=\"attr\">value</span>:<span class=\"number\">2</span> &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\">// userId 为当前用户id， nickName:昵称</span></span><br><span class=\"line\">group.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">  socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;joinRoom&#x27;</span>, &#123;</span><br><span class=\"line\">    nickName,</span><br><span class=\"line\">    <span class=\"attr\">id</span>:userId,</span><br><span class=\"line\">    <span class=\"attr\">roomId</span>:<span class=\"string\">`room<span class=\"subst\">$&#123; item.value &#125;</span>`</span>,</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>通过joinRoom自定义事件，加入不同得房间。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;client_msg&#x27;</span>, &#123; </span><br><span class=\"line\">  msg,</span><br><span class=\"line\">  nickName,</span><br><span class=\"line\">  <span class=\"attr\">roomId</span>: <span class=\"string\">`room<span class=\"subst\">$&#123; currentChat.roomId &#125;</span>`</span>,</span><br><span class=\"line\">  userId</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>通过client_msg自定义事件，向服务端发送聊天信息,发送消息需要传当前的roomId,服务端根据当前roomId,群发消息到对应群内</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> msgArr = <span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>()</span><br><span class=\"line\">socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;server_msg&#x27;</span>, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; roomId &#125; = data</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!msgArr.<span class=\"title function_\">get</span>(roomId)) msgArr.<span class=\"title function_\">set</span>(roomId, [])</span><br><span class=\"line\">  <span class=\"keyword\">const</span> roomData = msgArr.<span class=\"title function_\">get</span>(roomId).<span class=\"title function_\">concat</span>(data)</span><br><span class=\"line\">  msgArr.<span class=\"title function_\">set</span>(roomId, roomData)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>通过监听server_msg，获取服务端返回的消息，并保存</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"socket-io\"><a href=\"#socket-io\" class=\"headerlink\" title=\"socket.io\"></a>socket.io</h1><p>官网地址：<a href=\"https://socket.io/docs/v4/\">https://socket.io/docs/v4/</a></p>\n<h1 id=\"1、服务器端\"><a href=\"#1、服务器端\" class=\"headerlink\" title=\"1、服务器端\"></a>1、服务器端</h1><h3 id=\"1-1、安装\"><a href=\"#1-1、安装\" class=\"headerlink\" title=\"1.1、安装\"></a>1.1、安装</h3><p>socket.io v4.x版本 至少需要 Nodev10</p>\n<h3 id=\"1-2、下载\"><a href=\"#1-2、下载\" class=\"headerlink\" title=\"1.2、下载\"></a>1.2、下载</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install socket.<span class=\"property\">io</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-3、使用\"><a href=\"#1-3、使用\" class=\"headerlink\" title=\"1.3、使用\"></a>1.3、使用</h3><h5 id=\"1-3-1、启动端口\"><a href=\"#1-3-1、启动端口\" class=\"headerlink\" title=\"1.3.1、启动端口\"></a>1.3.1、启动端口</h5><p>这里使用的是express</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);<span class=\"comment\">//引用express</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"title function_\">express</span>();<span class=\"comment\">//创建express实例</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> server = app.<span class=\"title function_\">listen</span>(<span class=\"number\">9999</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;<span class=\"comment\">//应用启动端口为9999</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> host = server.<span class=\"title function_\">address</span>().<span class=\"property\">address</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> port = server.<span class=\"title function_\">address</span>().<span class=\"property\">port</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;访问地址为&quot;</span>, host, port)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> socketIo = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;socket.io&#x27;</span>)(server, &#123; <span class=\"attr\">cors</span>: <span class=\"literal\">true</span> &#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"1-3-2、socketIo监听\"><a href=\"#1-3-2、socketIo监听\" class=\"headerlink\" title=\"1.3.2、socketIo监听\"></a>1.3.2、socketIo监听</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> groupUser = []</span><br><span class=\"line\"><span class=\"comment\">//监听connection（用户连接）事件，socket为用户连接的实例</span></span><br><span class=\"line\">socketIo.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;connection&#x27;</span>,<span class=\"function\">(<span class=\"params\">socket</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;disconnect&#x27;</span>,<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(groupUser).<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>&#123;</span><br><span class=\"line\">      groupUser[item] = groupUser[item].<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">ele</span>=&gt;</span>ele.<span class=\"property\">socketId</span> !== socket.<span class=\"property\">id</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;用户&quot;</span>+socket.<span class=\"property\">id</span>+<span class=\"string\">&quot;断开连接&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 监听客户端加入群聊连接事件</span></span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;joinRoom&#x27;</span>, <span class=\"function\"><span class=\"params\">data</span>=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; nickName, id, roomId &#125; = data</span><br><span class=\"line\">    socket.<span class=\"title function_\">join</span>(roomId)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!groupUser[roomId]) groupUser[roomId] = []</span><br><span class=\"line\">    groupUser[roomId].<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">      nickName,</span><br><span class=\"line\">      <span class=\"attr\">socketId</span>:socket.<span class=\"property\">id</span>,</span><br><span class=\"line\">      id</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;roomUser&#x27;</span>, groupUser)</span><br><span class=\"line\">    socket.<span class=\"property\">broadcast</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;roomUser&#x27;</span>, groupUser)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"> </span><br><span class=\"line\"> socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;client_msg&#x27;</span>,<span class=\"function\">(<span class=\"params\">data</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//监听msg事件（这个是自定义的事件）</span></span><br><span class=\"line\">    <span class=\"comment\">// type 1代表左侧消息，2代表右侧消息</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; msg, nickName, roomId, userId &#125; = data</span><br><span class=\"line\">    <span class=\"keyword\">const</span> params = &#123;</span><br><span class=\"line\">      msg,</span><br><span class=\"line\">      nickName,</span><br><span class=\"line\">      roomId,</span><br><span class=\"line\">      <span class=\"attr\">times</span>:<span class=\"title function_\">moment</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>()).<span class=\"title function_\">format</span>(<span class=\"string\">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>),</span><br><span class=\"line\">      userId,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> leftMessage = &#123; ...params, <span class=\"attr\">type</span>:<span class=\"number\">1</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rightMessage = &#123; ...params, <span class=\"attr\">type</span>:<span class=\"number\">2</span> &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 向该房间其他人发送消息</span></span><br><span class=\"line\">    socket.<span class=\"title function_\">in</span>([data.<span class=\"property\">roomId</span>]).<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;server_msg&#x27;</span>, leftMessage);</span><br><span class=\"line\">    <span class=\"comment\">// 向当前发送者返回消息</span></span><br><span class=\"line\">    socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;server_msg&#x27;</span>,rightMessage);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>socket.id自动生成，每次连接都是新的id，这里通过监听client_online事件，收集客户端传入的数据data,<br>通过client_message</p>\n<h1 id=\"2、客户端\"><a href=\"#2、客户端\" class=\"headerlink\" title=\"2、客户端\"></a>2、客户端</h1><h3 id=\"2-1、安装\"><a href=\"#2-1、安装\" class=\"headerlink\" title=\"2.1、安装\"></a>2.1、安装</h3><p>socket.io v4.x版本 至少需要 Nodev10</p>\n<h3 id=\"2-2、下载\"><a href=\"#2-2、下载\" class=\"headerlink\" title=\"2.2、下载\"></a>2.2、下载</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install socket.<span class=\"property\">io</span>-client</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3、使用\"><a href=\"#2-3、使用\" class=\"headerlink\" title=\"2.3、使用\"></a>2.3、使用</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> io <span class=\"keyword\">from</span> <span class=\"string\">&#x27;socket.io-client&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> socket = <span class=\"title function_\">io</span>(<span class=\"string\">&#x27;ws://localhost:9999&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 根据当前用户的group，加入不同聊天群组</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> group = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>:<span class=\"string\">&quot;聊天群1&quot;</span>, <span class=\"attr\">value</span>:<span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>:<span class=\"string\">&quot;聊天群2&quot;</span>, <span class=\"attr\">value</span>:<span class=\"number\">2</span> &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\">// userId 为当前用户id， nickName:昵称</span></span><br><span class=\"line\">group.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">  socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;joinRoom&#x27;</span>, &#123;</span><br><span class=\"line\">    nickName,</span><br><span class=\"line\">    <span class=\"attr\">id</span>:userId,</span><br><span class=\"line\">    <span class=\"attr\">roomId</span>:<span class=\"string\">`room<span class=\"subst\">$&#123; item.value &#125;</span>`</span>,</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>通过joinRoom自定义事件，加入不同得房间。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;client_msg&#x27;</span>, &#123; </span><br><span class=\"line\">  msg,</span><br><span class=\"line\">  nickName,</span><br><span class=\"line\">  <span class=\"attr\">roomId</span>: <span class=\"string\">`room<span class=\"subst\">$&#123; currentChat.roomId &#125;</span>`</span>,</span><br><span class=\"line\">  userId</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>通过client_msg自定义事件，向服务端发送聊天信息,发送消息需要传当前的roomId,服务端根据当前roomId,群发消息到对应群内</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> msgArr = <span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>()</span><br><span class=\"line\">socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;server_msg&#x27;</span>, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; roomId &#125; = data</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!msgArr.<span class=\"title function_\">get</span>(roomId)) msgArr.<span class=\"title function_\">set</span>(roomId, [])</span><br><span class=\"line\">  <span class=\"keyword\">const</span> roomData = msgArr.<span class=\"title function_\">get</span>(roomId).<span class=\"title function_\">concat</span>(data)</span><br><span class=\"line\">  msgArr.<span class=\"title function_\">set</span>(roomId, roomData)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>通过监听server_msg，获取服务端返回的消息，并保存</p>\n"},{"title":"vue组件的v-model","_content":"\n```javascript\n// Child\n<template>\n</template>\n<script>\nexport default {\n    props: {\n         msg: { type: string }   \n    }，\n    model: {\n        prop: 'msg',\n        event: 'input'\n    },\n    data: {\n        value: null    \n    },\n    computed: {\n        defaultValue:{\n            set(val){\n                this.val = value\n                this.$emit('input', val)          \n            },\n            get(){\n                return this.value            \n            }        \n        }\n    },\n    created(){\n        this.defaultValue = msg    \n    },\n    methods: {\n        onClick(){\n            // 这里便会触发emit input方法\n            this.defaultValue = 'sdf'\n        }    \n    }\n}\n</script>\n\n// Parent.vue 使用\n<Child v-model='' />\n```\n\n","source":"_posts/vue/vue-vmodel.md","raw":"---\ncategories: vue\ntags: vue组件的v-model\ntitle: vue组件的v-model\n---\n\n```javascript\n// Child\n<template>\n</template>\n<script>\nexport default {\n    props: {\n         msg: { type: string }   \n    }，\n    model: {\n        prop: 'msg',\n        event: 'input'\n    },\n    data: {\n        value: null    \n    },\n    computed: {\n        defaultValue:{\n            set(val){\n                this.val = value\n                this.$emit('input', val)          \n            },\n            get(){\n                return this.value            \n            }        \n        }\n    },\n    created(){\n        this.defaultValue = msg    \n    },\n    methods: {\n        onClick(){\n            // 这里便会触发emit input方法\n            this.defaultValue = 'sdf'\n        }    \n    }\n}\n</script>\n\n// Parent.vue 使用\n<Child v-model='' />\n```\n\n","slug":"vue/vue-vmodel","published":1,"date":"2023-02-02T07:00:26.900Z","updated":"2023-02-02T07:37:30.060Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpwezcm1000ma1zi17l02kd4","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Child</span></span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">props</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">         <span class=\"attr\">msg</span>: &#123; <span class=\"attr\">type</span>: string &#125;   </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;，</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">model</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;msg&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">event</span>: <span class=\"string\">&#x27;input&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">data</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">value</span>: <span class=\"literal\">null</span>    </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">computed</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">defaultValue</span>:&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"title function_\">set</span>(<span class=\"params\">val</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                <span class=\"variable language_\">this</span>.<span class=\"property\">val</span> = value</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                <span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&#x27;input&#x27;</span>, val)          </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"title function_\">get</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">value</span>            </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            &#125;        </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"title function_\">created</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.<span class=\"property\">defaultValue</span> = msg    </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"title function_\">onClick</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"comment\">// 这里便会触发emit input方法</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"variable language_\">this</span>.<span class=\"property\">defaultValue</span> = <span class=\"string\">&#x27;sdf&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;    </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Parent.vue 使用</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Child</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&#x27;&#x27;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Child</span></span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">props</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">         <span class=\"attr\">msg</span>: &#123; <span class=\"attr\">type</span>: string &#125;   </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;，</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">model</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">prop</span>: <span class=\"string\">&#x27;msg&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">event</span>: <span class=\"string\">&#x27;input&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">data</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">value</span>: <span class=\"literal\">null</span>    </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">computed</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">defaultValue</span>:&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"title function_\">set</span>(<span class=\"params\">val</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                <span class=\"variable language_\">this</span>.<span class=\"property\">val</span> = value</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                <span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&#x27;input&#x27;</span>, val)          </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"title function_\">get</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">value</span>            </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            &#125;        </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"title function_\">created</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"variable language_\">this</span>.<span class=\"property\">defaultValue</span> = msg    </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"title function_\">onClick</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"comment\">// 这里便会触发emit input方法</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"variable language_\">this</span>.<span class=\"property\">defaultValue</span> = <span class=\"string\">&#x27;sdf&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;    </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Parent.vue 使用</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Child</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&#x27;&#x27;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clpwdepj80000hazian41334d","category_id":"cldmtglmq0002l1zi34um92r3","_id":"clpwdepjr0002hazi6whg5ydm"},{"post_id":"clpwder1f0003haziaytzcxzm","category_id":"cldmtglmq0002l1zi34um92r3","_id":"clpwder1j0005hazidj7ug5eb"},{"post_id":"clpwdetum0006hazicia40e40","category_id":"cldmtglmq0002l1zi34um92r3","_id":"clpwdetup0008hazi53ct6hwd"},{"post_id":"clpwezckr0000a1ziheprepxn","category_id":"cldmtglmz000cl1zi249545g9","_id":"clpwezclk0006a1zid5hjgqsw"},{"post_id":"clpwezcl40001a1zi02qth5pm","category_id":"cldmtgln1000kl1zi48ykgo6y","_id":"clpwezcln0009a1zigiuga62t"},{"post_id":"clpwezclc0003a1zig8gj3th7","category_id":"cldmtgln1000kl1zi48ykgo6y","_id":"clpwezclq000ca1zi8jpz6br3"},{"post_id":"clpwezclg0005a1zigut732su","category_id":"cldmtgln1000kl1zi48ykgo6y","_id":"clpwezclu000fa1zi4kmg3anr"},{"post_id":"clpwezcll0008a1zi0bqq0k3a","category_id":"cldmtgln5000xl1zi85bd4ttd","_id":"clpwezclv000ha1zih8q72fzg"},{"post_id":"clpwezclp000ba1zi9g0y6651","category_id":"cldmtgln5000xl1zi85bd4ttd","_id":"clpwezclw000ja1ziaav5430f"},{"post_id":"clpwezclr000ea1zi4g9sgpda","category_id":"cldmtgln7001al1zi22kigsf0","_id":"clpwezclx000ka1zigdg37mi7"},{"post_id":"clpwezcly000la1zib1al6ov1","category_id":"cldmtgln7001al1zi22kigsf0","_id":"clpwezcm7000pa1zig4cpewoz"},{"post_id":"clpwezcm1000ma1zi17l02kd4","category_id":"cldmtgln60015l1zib5ho2gzd","_id":"clpwezcm7000qa1zi9uogad9e"}],"PostTag":[{"post_id":"clpwdepj80000hazian41334d","tag_id":"cldmtglms0003l1zi2vz0cazi","_id":"clpwdepjp0001hazifdie04w7"},{"post_id":"clpwder1f0003haziaytzcxzm","tag_id":"cldmtgln3000rl1zi6kxza83f","_id":"clpwder1i0004haziembv4bpz"},{"post_id":"clpwdetum0006hazicia40e40","tag_id":"cldmtglmv0008l1zi2s6m9ihk","_id":"clpwdetuo0007hazien2c5m9h"},{"post_id":"clpwezckr0000a1ziheprepxn","tag_id":"cldmtglmz000el1zi1xjffqyf","_id":"clpwezclc0002a1zi1yn0gb4d"},{"post_id":"clpwezcl40001a1zi02qth5pm","tag_id":"cldmtgln1000ll1zi10sl3qas","_id":"clpwezclg0004a1zi6a553r7x"},{"post_id":"clpwezclc0003a1zig8gj3th7","tag_id":"cldmtgln4000vl1zi22ic9kt2","_id":"clpwezcll0007a1zi3s9y01o6"},{"post_id":"clpwezclg0005a1zigut732su","tag_id":"cldmtgln5000zl1zigt6955yk","_id":"clpwezclp000aa1zi17fch33n"},{"post_id":"clpwezcll0008a1zi0bqq0k3a","tag_id":"cldmtgln70017l1zi4osv891n","_id":"clpwezclr000da1zi7ovld3lp"},{"post_id":"clpwezclp000ba1zi9g0y6651","tag_id":"cldmtgln60013l1zi6z9f5pvr","_id":"clpwezclu000ga1zi2143eria"},{"post_id":"clpwezclr000ea1zi4g9sgpda","tag_id":"cldmtgln8001el1zi9bxuf6p6","_id":"clpwezclw000ia1zi4pjp3eze"},{"post_id":"clpwezcly000la1zib1al6ov1","tag_id":"cldmtglna001jl1zi2iw901sv","_id":"clpwezcm4000na1zi6c8ga6rn"},{"post_id":"clpwezcm1000ma1zi17l02kd4","tag_id":"cldmtgln7001bl1ziep7i2fnl","_id":"clpwezcm6000oa1zihl297uw3"}],"Tag":[{"name":"linux设置软链接","_id":"cldmtglms0003l1zi2vz0cazi"},{"name":"linux设置定时任务","_id":"cldmtglmv0008l1zi2s6m9ihk"},{"name":"python生成apk","_id":"cldmtglmz000el1zi1xjffqyf"},{"name":"谷歌无跨域模式","_id":"cldmtgln1000ll1zi10sl3qas"},{"name":"linux服务器之间上传文件","_id":"cldmtgln3000rl1zi6kxza83f"},{"name":"react配置装饰器","_id":"cldmtgln4000vl1zi22ic9kt2"},{"name":"基于react-dnd实现拖拽、排序","_id":"cldmtgln5000zl1zigt6955yk"},{"name":"vscode插件","_id":"cldmtgln60013l1zi6z9f5pvr"},{"name":"vscode保存格式化设置","_id":"cldmtgln70017l1zi4osv891n"},{"name":"vue组件的v-model","_id":"cldmtgln7001bl1ziep7i2fnl"},{"name":"websocket聊天室","_id":"cldmtgln8001el1zi9bxuf6p6"},{"name":"websocket群聊","_id":"cldmtglna001jl1zi2iw901sv"}]}}